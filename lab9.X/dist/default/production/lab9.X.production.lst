

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri May 14 12:16:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  000B                     _INTCONbits	set	11
   206  0012                     _T2CONbits	set	18
   207  001B                     _CCPR2L	set	27
   208  0015                     _CCPR1L	set	21
   209  001D                     _CCP2CONbits	set	29
   210  0017                     _CCP1CONbits	set	23
   211  001F                     _ADCON0bits	set	31
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  001E                     _ADRESH	set	30
   216  000C                     _PIR1bits	set	12
   217  008C                     _PIE1bits	set	140
   218  0092                     _PR2	set	146
   219  0087                     _TRISCbits	set	135
   220  009F                     _ADCON1bits	set	159
   221  008F                     _OSCCONbits	set	143
   222  0087                     _TRISC	set	135
   223  0086                     _TRISB	set	134
   224  0085                     _TRISA	set	133
   225  0189                     _ANSELH	set	393
   226  0188                     _ANSEL	set	392
   227                           
   228                           	psect	cinit
   229  000F                     start_initialization:	
   230                           ; #config settings
   231                           
   232  000F                     __initialization:
   233                           
   234                           ; Clear objects allocated to COMMON
   235  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   236  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   237  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   238  0012  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   239  0013                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0013                     __end_of__initialization:
   243  0013  0183               	clrf	3
   244  0014  120A  118A  2899   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0079                     __pbssCOMMON:
   248  0079                     _b:
   249  0079                     	ds	2
   250  007B                     _a:
   251  007B                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_setup:
   256  0070                     ?_conversion2:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_isr:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_isr:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270  0070                     	ds	4
   271  0074                     ??_setup:
   272  0074                     ??_conversion2:	
   273                           ; 1 bytes @ 0x4
   274                           
   275                           
   276                           ; 1 bytes @ 0x4
   277  0074                     	ds	2
   278  0076                     conversion2@puertoANL:
   279                           
   280                           ; 1 bytes @ 0x6
   281  0076                     	ds	1
   282  0077                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x7
   285  0077                     	ds	2
   286                           
   287                           	psect	maintext
   288  0099                     __pmaintext:	
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 54 in file "lab9.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          2       0       0       0       0
   311 ;;      Totals:         2       0       0       0       0
   312 ;;Total ram usage:        2 bytes
   313 ;; Hardware stack levels required when called:    2
   314 ;; This function calls:
   315 ;;		_conversion2
   316 ;;		_setup
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           
   323                           ;psect for function _main
   324  0099                     _main:
   325  0099                     l737:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   328                           
   329                           
   330                           ;lab9.c: 56:     setup();
   331  0099  120A  118A  2017  120A  118A  	fcall	_setup
   332  009E                     l65:	
   333                           ;lab9.c: 58:     while(1){
   334                           
   335                           
   336                           ;lab9.c: 59:          conversion2(2);
   337  009E  3002               	movlw	2
   338  009F  120A  118A  206B  120A  118A  	fcall	_conversion2
   339  00A4                     l739:
   340                           
   341                           ;lab9.c: 60:        _delay((unsigned long)((1)*(8000000/4000.0)));
   342  00A4  3003               	movlw	3
   343  00A5  00F8               	movwf	??_main+1
   344  00A6  3097               	movlw	151
   345  00A7  00F7               	movwf	??_main
   346  00A8                     u57:
   347  00A8  0BF7               	decfsz	??_main,f
   348  00A9  28A8               	goto	u57
   349  00AA  0BF8               	decfsz	??_main+1,f
   350  00AB  28A8               	goto	u57
   351  00AC  28AD               	nop2
   352  00AD                     l741:
   353                           
   354                           ;lab9.c: 61:         conversion2(3);
   355  00AD  3003               	movlw	3
   356  00AE  120A  118A  206B  120A  118A  	fcall	_conversion2
   357                           
   358                           ;lab9.c: 62:        _delay((unsigned long)((1)*(8000000/4000.0)));
   359  00B3  3003               	movlw	3
   360  00B4  00F8               	movwf	??_main+1
   361  00B5  3097               	movlw	151
   362  00B6  00F7               	movwf	??_main
   363  00B7                     u67:
   364  00B7  0BF7               	decfsz	??_main,f
   365  00B8  28B7               	goto	u67
   366  00B9  0BF8               	decfsz	??_main+1,f
   367  00BA  28B7               	goto	u67
   368  00BB  28BC               	nop2
   369  00BC  289E               	goto	l65
   370  00BD  120A  118A  280C   	ljmp	start
   371  00C0                     __end_of_main:
   372                           
   373                           	psect	text1
   374  0017                     __ptext1:	
   375 ;; *************** function _setup *****************
   376 ;; Defined at:
   377 ;;		line 69 in file "lab9.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          1       0       0       0       0
   394 ;;      Totals:         1       0       0       0       0
   395 ;;Total ram usage:        1 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; Hardware stack levels required when called:    1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           
   406                           ;psect for function _setup
   407  0017                     _setup:
   408  0017                     l671:	
   409                           ;incstack = 0
   410                           ; Regs used in _setup: [wreg+status,2+status,0]
   411                           
   412                           
   413                           ;lab9.c: 70:     ANSEL = 0b00001100;
   414  0017  300C               	movlw	12
   415  0018  1683               	bsf	3,5	;RP0=1, select bank3
   416  0019  1703               	bsf	3,6	;RP1=1, select bank3
   417  001A  0088               	movwf	8	;volatile
   418  001B                     l673:
   419                           
   420                           ;lab9.c: 71:     ANSELH = 0;
   421  001B  0189               	clrf	9	;volatile
   422  001C                     l675:
   423                           
   424                           ;lab9.c: 73:     TRISA = 0b00001100;
   425  001C  300C               	movlw	12
   426  001D  1683               	bsf	3,5	;RP0=1, select bank1
   427  001E  1303               	bcf	3,6	;RP1=0, select bank1
   428  001F  0085               	movwf	5	;volatile
   429                           
   430                           ;lab9.c: 74:     TRISB = 0;
   431  0020  0186               	clrf	6	;volatile
   432                           
   433                           ;lab9.c: 75:     TRISC = 0;
   434  0021  0187               	clrf	7	;volatile
   435                           
   436                           ;lab9.c: 80:     PORTA = 0;
   437  0022  1283               	bcf	3,5	;RP0=0, select bank0
   438  0023  1303               	bcf	3,6	;RP1=0, select bank0
   439  0024  0185               	clrf	5	;volatile
   440                           
   441                           ;lab9.c: 81:     PORTB = 0;
   442  0025  0186               	clrf	6	;volatile
   443                           
   444                           ;lab9.c: 82:     PORTC = 0;
   445  0026  0187               	clrf	7	;volatile
   446  0027                     l677:
   447                           
   448                           ;lab9.c: 84:     OSCCONbits.IRCF = 0b0111;
   449  0027  3070               	movlw	112
   450  0028  1683               	bsf	3,5	;RP0=1, select bank1
   451  0029  1303               	bcf	3,6	;RP1=0, select bank1
   452  002A  048F               	iorwf	15,f	;volatile
   453  002B                     l679:
   454                           
   455                           ;lab9.c: 85:     OSCCONbits.SCS = 1;
   456  002B  140F               	bsf	15,0	;volatile
   457  002C                     l681:
   458                           
   459                           ;lab9.c: 87:     ADCON1bits.ADFM = 0;
   460  002C  139F               	bcf	31,7	;volatile
   461  002D                     l683:
   462                           
   463                           ;lab9.c: 88:     ADCON1bits.VCFG0 = 0;
   464  002D  121F               	bcf	31,4	;volatile
   465  002E                     l685:
   466                           
   467                           ;lab9.c: 89:     ADCON1bits.VCFG0 = 0;
   468  002E  121F               	bcf	31,4	;volatile
   469  002F                     l687:
   470                           
   471                           ;lab9.c: 91:     ADCON0bits.ADCS = 0b10;
   472  002F  1283               	bcf	3,5	;RP0=0, select bank0
   473  0030  1303               	bcf	3,6	;RP1=0, select bank0
   474  0031  081F               	movf	31,w	;volatile
   475  0032  393F               	andlw	-193
   476  0033  3880               	iorlw	128
   477  0034  009F               	movwf	31	;volatile
   478  0035                     l689:
   479                           
   480                           ;lab9.c: 93:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   481  0035  3010               	movlw	16
   482  0036  00F4               	movwf	??_setup
   483  0037                     u77:
   484  0037  0BF4               	decfsz	??_setup,f
   485  0038  2837               	goto	u77
   486  0039  0000               	nop
   487  003A                     l691:
   488                           
   489                           ;lab9.c: 94:     ADCON0bits.ADON = 1;
   490  003A  1283               	bcf	3,5	;RP0=0, select bank0
   491  003B  1303               	bcf	3,6	;RP1=0, select bank0
   492  003C  141F               	bsf	31,0	;volatile
   493  003D                     l693:
   494                           
   495                           ;lab9.c: 97:     TRISCbits.TRISC2 = 1;
   496  003D  1683               	bsf	3,5	;RP0=1, select bank1
   497  003E  1303               	bcf	3,6	;RP1=0, select bank1
   498  003F  1507               	bsf	7,2	;volatile
   499  0040                     l695:
   500                           
   501                           ;lab9.c: 98:     TRISCbits.TRISC1 = 1;
   502  0040  1487               	bsf	7,1	;volatile
   503  0041                     l697:
   504                           
   505                           ;lab9.c: 100:     PR2 = 249;
   506  0041  30F9               	movlw	249
   507  0042  0092               	movwf	18	;volatile
   508  0043                     l699:
   509                           
   510                           ;lab9.c: 102:     CCP1CONbits.P1M = 0b000;
   511  0043  303F               	movlw	-193
   512  0044  1283               	bcf	3,5	;RP0=0, select bank0
   513  0045  1303               	bcf	3,6	;RP1=0, select bank0
   514  0046  0597               	andwf	23,f	;volatile
   515  0047                     l701:
   516                           
   517                           ;lab9.c: 104:     CCP1CONbits.CCP1M = 0b00001100;
   518  0047  0817               	movf	23,w	;volatile
   519  0048  39F0               	andlw	-16
   520  0049  380C               	iorlw	12
   521  004A  0097               	movwf	23	;volatile
   522  004B                     l703:
   523                           
   524                           ;lab9.c: 105:     CCP2CONbits.CCP2M = 0b00001100;
   525  004B  081D               	movf	29,w	;volatile
   526  004C  39F0               	andlw	-16
   527  004D  380C               	iorlw	12
   528  004E  009D               	movwf	29	;volatile
   529  004F                     l705:
   530                           
   531                           ;lab9.c: 107:     CCPR1L = 0x0f;
   532  004F  300F               	movlw	15
   533  0050  0095               	movwf	21	;volatile
   534  0051                     l707:
   535                           
   536                           ;lab9.c: 108:     CCPR2L = 0x0f;
   537  0051  300F               	movlw	15
   538  0052  009B               	movwf	27	;volatile
   539  0053                     l709:
   540                           
   541                           ;lab9.c: 109:     CCP1CONbits.DC1B = 0;
   542  0053  30CF               	movlw	-49
   543  0054  0597               	andwf	23,f	;volatile
   544  0055                     l711:
   545                           
   546                           ;lab9.c: 112:     PIR1bits.TMR2IF = 0;
   547  0055  108C               	bcf	12,1	;volatile
   548  0056                     l713:
   549                           
   550                           ;lab9.c: 113:     T2CONbits.T2CKPS = 0b11;
   551  0056  3003               	movlw	3
   552  0057  0492               	iorwf	18,f	;volatile
   553  0058                     l715:
   554                           
   555                           ;lab9.c: 114:     T2CONbits.TMR2ON = 1;
   556  0058  1512               	bsf	18,2	;volatile
   557  0059                     l71:	
   558                           ;lab9.c: 116:     while(!PIR1bits.TMR2IF);
   559                           
   560  0059  1C8C               	btfss	12,1	;volatile
   561  005A  285C               	goto	u11
   562  005B  285D               	goto	u10
   563  005C                     u11:
   564  005C  2859               	goto	l71
   565  005D                     u10:
   566  005D                     l73:
   567                           
   568                           ;lab9.c: 117:     PIR1bits.TMR2IF = 0;
   569  005D  108C               	bcf	12,1	;volatile
   570                           
   571                           ;lab9.c: 120:     TRISCbits.TRISC2 = 0;
   572  005E  1683               	bsf	3,5	;RP0=1, select bank1
   573  005F  1303               	bcf	3,6	;RP1=0, select bank1
   574  0060  1107               	bcf	7,2	;volatile
   575                           
   576                           ;lab9.c: 121:     TRISCbits.TRISC1 = 0;
   577  0061  1087               	bcf	7,1	;volatile
   578                           
   579                           ;lab9.c: 123:     PIR1bits.ADIF = 0;
   580  0062  1283               	bcf	3,5	;RP0=0, select bank0
   581  0063  1303               	bcf	3,6	;RP1=0, select bank0
   582  0064  130C               	bcf	12,6	;volatile
   583                           
   584                           ;lab9.c: 124:     PIE1bits.ADIE = 1;
   585  0065  1683               	bsf	3,5	;RP0=1, select bank1
   586  0066  1303               	bcf	3,6	;RP1=0, select bank1
   587  0067  170C               	bsf	12,6	;volatile
   588                           
   589                           ;lab9.c: 125:     INTCONbits.PEIE = 1;
   590  0068  170B               	bsf	11,6	;volatile
   591                           
   592                           ;lab9.c: 126:     INTCONbits.GIE = 1;
   593  0069  178B               	bsf	11,7	;volatile
   594  006A                     l74:	
   595                           ;lab9.c: 128:     return;
   596                           
   597  006A  0008               	return
   598  006B                     __end_of_setup:
   599                           
   600                           	psect	text2
   601  006B                     __ptext2:	
   602 ;; *************** function _conversion2 *****************
   603 ;; Defined at:
   604 ;;		line 131 in file "lab9.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  puertoANL       1    wreg     unsigned char 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  puertoANL       1    6[COMMON] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         1       0       0       0       0
   620 ;;      Temps:          2       0       0       0       0
   621 ;;      Totals:         3       0       0       0       0
   622 ;;Total ram usage:        3 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _conversion2
   634  006B                     _conversion2:
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _conversion2: [wreg+status,2+status,0]
   638                           ;conversion2@puertoANL stored from wreg
   639  006B  00F6               	movwf	conversion2@puertoANL
   640  006C                     l717:
   641                           
   642                           ;lab9.c: 133:     ADCON0bits.CHS = puertoANL;
   643  006C  0876               	movf	conversion2@puertoANL,w
   644  006D  00F4               	movwf	??_conversion2
   645  006E  0DF4               	rlf	??_conversion2,f
   646  006F  0DF4               	rlf	??_conversion2,f
   647  0070  1283               	bcf	3,5	;RP0=0, select bank0
   648  0071  1303               	bcf	3,6	;RP1=0, select bank0
   649  0072  081F               	movf	31,w	;volatile
   650  0073  0674               	xorwf	??_conversion2,w
   651  0074  39C3               	andlw	-61
   652  0075  0674               	xorwf	??_conversion2,w
   653  0076  009F               	movwf	31	;volatile
   654  0077                     l719:
   655                           
   656                           ;lab9.c: 134:     if (ADCON0bits.GO_DONE==0 && puertoANL == 2){
   657  0077  189F               	btfsc	31,1	;volatile
   658  0078  287A               	goto	u21
   659  0079  287B               	goto	u20
   660  007A                     u21:
   661  007A  288D               	goto	l727
   662  007B                     u20:
   663  007B                     l721:
   664  007B  3002               	movlw	2
   665  007C  0676               	xorwf	conversion2@puertoANL,w
   666  007D  1D03               	btfss	3,2
   667  007E  2880               	goto	u31
   668  007F  2881               	goto	u30
   669  0080                     u31:
   670  0080  288D               	goto	l727
   671  0081                     u30:
   672  0081                     l723:
   673                           
   674                           ;lab9.c: 135:         CCPR1L = (a >>1) +128;
   675  0081  087C               	movf	_a+1,w
   676  0082  00F5               	movwf	??_conversion2+1
   677  0083  087B               	movf	_a,w
   678  0084  00F4               	movwf	??_conversion2
   679  0085  1003               	clrc
   680  0086  0CF5               	rrf	??_conversion2+1,f
   681  0087  0CF4               	rrf	??_conversion2,f
   682  0088  0874               	movf	??_conversion2,w
   683  0089  3E80               	addlw	128
   684  008A  0095               	movwf	21	;volatile
   685  008B                     l725:
   686                           
   687                           ;lab9.c: 137:         ADCON0bits.GO_DONE = 1;
   688  008B  149F               	bsf	31,1	;volatile
   689                           
   690                           ;lab9.c: 138:     }
   691  008C  2898               	goto	l79
   692  008D                     l727:
   693                           
   694                           ;lab9.c: 141:         CCPR2L = (b >>1) +128;
   695  008D  087A               	movf	_b+1,w
   696  008E  00F5               	movwf	??_conversion2+1
   697  008F  0879               	movf	_b,w
   698  0090  00F4               	movwf	??_conversion2
   699  0091  1003               	clrc
   700  0092  0CF5               	rrf	??_conversion2+1,f
   701  0093  0CF4               	rrf	??_conversion2,f
   702  0094  0874               	movf	??_conversion2,w
   703  0095  3E80               	addlw	128
   704  0096  009B               	movwf	27	;volatile
   705  0097                     l729:
   706                           
   707                           ;lab9.c: 143:         ADCON0bits.GO_DONE = 1;
   708  0097  149F               	bsf	31,1	;volatile
   709  0098                     l79:
   710  0098  0008               	return
   711  0099                     __end_of_conversion2:
   712                           
   713                           	psect	text3
   714  00C0                     __ptext3:	
   715 ;; *************** function _isr *****************
   716 ;; Defined at:
   717 ;;		line 42 in file "lab9.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          4       0       0       0       0
   734 ;;      Totals:         4       0       0       0       0
   735 ;;Total ram usage:        4 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		Interrupt level 1
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _isr
   746  00C0                     _isr:
   747  00C0                     i1l731:
   748                           
   749                           ;lab9.c: 44:     if(PIR1bits.ADIF){
   750  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   751  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   752  00C2  1F0C               	btfss	12,6	;volatile
   753  00C3  28C5               	goto	u4_21
   754  00C4  28C6               	goto	u4_20
   755  00C5                     u4_21:
   756  00C5  28D5               	goto	i1l60
   757  00C6                     u4_20:
   758  00C6                     i1l733:
   759                           
   760                           ;lab9.c: 45:         a = ADRESH;
   761  00C6  081E               	movf	30,w	;volatile
   762  00C7  00F0               	movwf	??_isr
   763  00C8  01F1               	clrf	??_isr+1
   764  00C9  0870               	movf	??_isr,w
   765  00CA  00FB               	movwf	_a
   766  00CB  0871               	movf	??_isr+1,w
   767  00CC  00FC               	movwf	_a+1
   768                           
   769                           ;lab9.c: 46:         b = ADRESH;
   770  00CD  081E               	movf	30,w	;volatile
   771  00CE  00F0               	movwf	??_isr
   772  00CF  01F1               	clrf	??_isr+1
   773  00D0  0870               	movf	??_isr,w
   774  00D1  00F9               	movwf	_b
   775  00D2  0871               	movf	??_isr+1,w
   776  00D3  00FA               	movwf	_b+1
   777  00D4                     i1l735:
   778                           
   779                           ;lab9.c: 48:         PIR1bits.ADIF = 0;
   780  00D4  130C               	bcf	12,6	;volatile
   781  00D5                     i1l60:
   782  00D5  0873               	movf	??_isr+3,w
   783  00D6  008A               	movwf	10
   784  00D7  0E72               	swapf	??_isr+2,w
   785  00D8  0083               	movwf	3
   786  00D9  0EFE               	swapf	btemp,f
   787  00DA  0E7E               	swapf	btemp,w
   788  00DB  0009               	retfie
   789  00DC                     __end_of_isr:
   790  007E                     btemp	set	126	;btemp
   791  007E                     wtemp0	set	126
   792                           
   793                           	psect	intentry
   794  0004                     __pintentry:	
   795                           ;incstack = 0
   796                           ; Regs used in _isr: [wreg]
   797                           
   798  0004                     interrupt_function:
   799  007E                     saved_w	set	btemp
   800  0004  00FE               	movwf	btemp
   801  0005  0E03               	swapf	3,w
   802  0006  00F2               	movwf	??_isr+2
   803  0007  080A               	movf	10,w
   804  0008  00F3               	movwf	??_isr+3
   805  0009  120A  118A  28C0   	ljmp	_isr
   806                           
   807                           	psect	config
   808                           
   809                           ;Config register CONFIG1 @ 0x2007
   810                           ;	Oscillator Selection bits
   811                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   812                           ;	Watchdog Timer Enable bit
   813                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   814                           ;	Power-up Timer Enable bit
   815                           ;	PWRTE = OFF, PWRT disabled
   816                           ;	RE3/MCLR pin function select bit
   817                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   818                           ;	Code Protection bit
   819                           ;	CP = OFF, Program memory code protection is disabled
   820                           ;	Data Code Protection bit
   821                           ;	CPD = OFF, Data memory code protection is disabled
   822                           ;	Brown Out Reset Selection bits
   823                           ;	BOREN = OFF, BOR disabled
   824                           ;	Internal External Switchover bit
   825                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   826                           ;	Fail-Safe Clock Monitor Enabled bit
   827                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   828                           ;	Low Voltage Programming Enable bit
   829                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   830                           ;	In-Circuit Debugger Mode bit
   831                           ;	DEBUG = 0x1, unprogrammed default
   832  2007                     	org	8199
   833  2007  20D4               	dw	8404
   834                           
   835                           ;Config register CONFIG2 @ 0x2008
   836                           ;	Brown-out Reset Selection bit
   837                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   838                           ;	Flash Program Memory Self Write Enable bits
   839                           ;	WRT = OFF, Write protection off
   840  2008                     	org	8200
   841  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_conversion2

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              7 COMMON     2     2      0
                        _conversion2
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion2                                          3     3      0      30
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion2
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri May 14 12:16:59 2021

                      _a 007B                        _b 0079                       l71 0059  
                     l73 005D                       l65 009E                       l74 006A  
                     l79 0098                       u10 005D                       u11 005C  
                     u20 007B                       u21 007A                       u30 0081  
                     u31 0080                       u57 00A8                       u67 00B7  
                     u77 0037                      l701 0047                      l711 0055  
                    l703 004B                      l721 007B                      l713 0056  
                    l705 004F                      l723 0081                      l715 0058  
                    l707 0051                      l725 008B                      l717 006C  
                    l709 0053                      l741 00AD                      l727 008D  
                    l719 0077                      l671 0017                      l729 0097  
                    l681 002C                      l673 001B                      l737 0099  
                    l691 003A                      l683 002D                      l675 001C  
                    l739 00A4                      l693 003D                      l685 002E  
                    l677 0027                      l695 0040                      l687 002F  
                    l679 002B                      l697 0041                      l689 0035  
                    l699 0043                      _PR2 0092                      _isr 00C0  
           ?_conversion2 0070                     ?_isr 0070                     i1l60 00D5  
                   u4_20 00C6                     u4_21 00C5                     _main 0099  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l731 00C0  
                  i1l733 00C6                    i1l735 00D4                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _setup 0017  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00C0                   ??_main 0077  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 ?_setup 0070                   _ANSELH 0189                   saved_w 007E  
   __size_of_conversion2 002E  __end_of__initialization 0013           __pcstackCOMMON 0070  
          __end_of_setup 006B                  ??_setup 0074               __pmaintext 0099  
             __pintentry 0004                  __ptext1 0017                  __ptext2 006B  
                __ptext3 00C0                _T2CONbits 0012             __size_of_isr 001C  
   end_of_initialization 0013                _TRISCbits 0087              _CCP1CONbits 0017  
            _CCP2CONbits 001D     conversion2@puertoANL 0076      start_initialization 000F  
          ??_conversion2 0074              __end_of_isr 00DC              __pbssCOMMON 0079  
              ___latbits 0002      __end_of_conversion2 0099           __size_of_setup 0054  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F              _conversion2 006B  
          __size_of_main 0027               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
