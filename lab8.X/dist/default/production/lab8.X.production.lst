

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:21:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  01E5                     __pidataBANK0:
   215                           
   216                           ;initializer for _Display
   217  01E5  343F               	retlw	63
   218  01E6  3406               	retlw	6
   219  01E7  345B               	retlw	91
   220  01E8  344F               	retlw	79
   221  01E9  3466               	retlw	102
   222  01EA  346D               	retlw	109
   223  01EB  347D               	retlw	125
   224  01EC  3407               	retlw	7
   225  01ED  347F               	retlw	127
   226  01EE  346F               	retlw	111
   227  0009                     _PORTEbits	set	9
   228  001F                     _ADCON0bits	set	31
   229  000B                     _INTCONbits	set	11
   230  0009                     _PORTE	set	9
   231  0007                     _PORTC	set	7
   232  0008                     _PORTD	set	8
   233  001E                     _ADRESH	set	30
   234  000C                     _PIR1bits	set	12
   235  008C                     _PIE1bits	set	140
   236  009F                     _ADCON1bits	set	159
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0189                     _ANSELH	set	393
   243  0188                     _ANSEL	set	392
   244                           
   245                           	psect	cinit
   246  000F                     start_initialization:	
   247                           ; #config settings
   248                           
   249  000F                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  000F  1383               	bcf	3,7	;select IRP bank0
   253  0010  3039               	movlw	low (__pdataBANK0+10)
   254  0011  00FD               	movwf	btemp+-1
   255  0012  3001               	movlw	high __pidataBANK0
   256  0013  00FE               	movwf	btemp
   257  0014  30E5               	movlw	low __pidataBANK0
   258  0015  00FF               	movwf	btemp+1
   259  0016  302F               	movlw	low __pdataBANK0
   260  0017  0084               	movwf	4
   261  0018  120A  118A  21D6  120A  118A  	fcall	init_ram0
   262                           
   263                           ; Clear objects allocated to BANK0
   264  001D  01B9               	clrf	__pbssBANK0& (0+127)
   265  001E  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   266  001F  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   267  0020  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   268  0021  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   269  0022  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   270  0023  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   271  0024  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   275  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0027                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279  0027                     __end_of__initialization:
   280  0027  0183               	clrf	3
   281  0028  120A  118A  295E   	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMMON
   284  0078                     __pbssCOMMON:
   285  0078                     _led:
   286  0078                     	ds	2
   287                           
   288                           	psect	bssBANK0
   289  0039                     __pbssBANK0:
   290  0039                     _d:
   291  0039                     	ds	2
   292  003B                     _c:
   293  003B                     	ds	2
   294  003D                     _b:
   295  003D                     	ds	2
   296  003F                     _a:
   297  003F                     	ds	2
   298                           
   299                           	psect	dataBANK0
   300  002F                     __pdataBANK0:
   301  002F                     _Display:
   302  002F                     	ds	10
   303                           
   304                           	psect	inittext
   305  01D2                     init_fetch0:	
   306                           ;	Called with low address in FSR and high address in W
   307                           
   308  01D2  087E               	movf	btemp,w
   309  01D3  008A               	movwf	10
   310  01D4  087F               	movf	btemp+1,w
   311  01D5  0082               	movwf	2
   312  01D6                     init_ram0:	
   313                           ;Called with:
   314                           ;	high address of idata address in btemp 
   315                           ;	low address of idata address in btemp+1 
   316                           ;	low address of data in FSR
   317                           ;	high address + 1 of data in btemp-1
   318                           
   319  01D6  120A  118A  21D2  120A  118A  	fcall	init_fetch0
   320  01DB  0080               	movwf	0
   321  01DC  0A84               	incf	4,f
   322  01DD  0804               	movf	4,w
   323  01DE  067D               	xorwf	btemp+-1,w
   324  01DF  1903               	btfsc	3,2
   325  01E0  3400               	retlw	0
   326  01E1  0AFF               	incf	btemp+1,f
   327  01E2  1903               	btfsc	3,2
   328  01E3  0AFE               	incf	btemp,f
   329  01E4  29D6               	goto	init_ram0
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_config:
   334  0070                     ?_conversion:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_ISR:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	4
   349  0074                     ??_config:
   350  0074                     ?___lwdiv:	
   351                           ; 1 bytes @ 0x4
   352                           
   353  0074                     ___lwdiv@divisor:	
   354                           ; 2 bytes @ 0x4
   355                           
   356                           
   357                           ; 2 bytes @ 0x4
   358  0074                     	ds	2
   359  0076                     ___lwdiv@dividend:
   360                           
   361                           ; 2 bytes @ 0x6
   362  0076                     	ds	2
   363                           
   364                           	psect	cstackBANK0
   365  0020                     __pcstackBANK0:
   366  0020                     ??___lwdiv:
   367                           
   368                           ; 1 bytes @ 0x0
   369  0020                     	ds	1
   370  0021                     ___lwdiv@counter:
   371                           
   372                           ; 1 bytes @ 0x1
   373  0021                     	ds	1
   374  0022                     ___lwdiv@quotient:
   375                           
   376                           ; 2 bytes @ 0x2
   377  0022                     	ds	2
   378  0024                     ?___lwmod:
   379  0024                     ___lwmod@divisor:	
   380                           ; 2 bytes @ 0x4
   381                           
   382                           
   383                           ; 2 bytes @ 0x4
   384  0024                     	ds	2
   385  0026                     ___lwmod@dividend:
   386                           
   387                           ; 2 bytes @ 0x6
   388  0026                     	ds	2
   389  0028                     ??___lwmod:
   390                           
   391                           ; 1 bytes @ 0x8
   392  0028                     	ds	1
   393  0029                     ___lwmod@counter:
   394                           
   395                           ; 1 bytes @ 0x9
   396  0029                     	ds	1
   397  002A                     ??_conversion:
   398                           
   399                           ; 1 bytes @ 0xA
   400  002A                     	ds	2
   401  002C                     conversion@puertoANL:
   402                           
   403                           ; 1 bytes @ 0xC
   404  002C                     	ds	1
   405  002D                     ??_main:
   406                           
   407                           ; 1 bytes @ 0xD
   408  002D                     	ds	2
   409                           
   410                           	psect	maintext
   411  015E                     __pmaintext:	
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 60 in file "lab8.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0
   433 ;;      Temps:          0       2       0       0       0
   434 ;;      Totals:         0       2       0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels required when called:    3
   437 ;; This function calls:
   438 ;;		_config
   439 ;;		_conversion
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _main
   447  015E                     _main:
   448  015E                     l992:	
   449                           ;incstack = 0
   450                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   451                           
   452                           
   453                           ;lab8.c: 62:     config();
   454  015E  120A  118A  21B3  120A  118A  	fcall	_config
   455  0163                     l994:
   456                           
   457                           ;lab8.c: 65:         conversion(0);
   458  0163  3000               	movlw	0
   459  0164  120A  118A  202B  120A  118A  	fcall	_conversion
   460  0169                     l996:
   461                           
   462                           ;lab8.c: 66:        _delay((unsigned long)((1)*(9000000/4000.0)));
   463  0169  3003               	movlw	3
   464  016A  1283               	bcf	3,5	;RP0=0, select bank0
   465  016B  1303               	bcf	3,6	;RP1=0, select bank0
   466  016C  00AE               	movwf	??_main+1
   467  016D  30EA               	movlw	234
   468  016E  00AD               	movwf	??_main
   469  016F                     u487:
   470  016F  0BAD               	decfsz	??_main,f
   471  0170  296F               	goto	u487
   472  0171  0BAE               	decfsz	??_main+1,f
   473  0172  296F               	goto	u487
   474  0173  0000               	nop
   475  0174                     l998:
   476                           
   477                           ;lab8.c: 67:         conversion(1);
   478  0174  3001               	movlw	1
   479  0175  120A  118A  202B  120A  118A  	fcall	_conversion
   480  017A                     l1000:
   481                           
   482                           ;lab8.c: 68:        _delay((unsigned long)((1)*(9000000/4000.0)));
   483  017A  3003               	movlw	3
   484  017B  1283               	bcf	3,5	;RP0=0, select bank0
   485  017C  1303               	bcf	3,6	;RP1=0, select bank0
   486  017D  00AE               	movwf	??_main+1
   487  017E  30EA               	movlw	234
   488  017F  00AD               	movwf	??_main
   489  0180                     u497:
   490  0180  0BAD               	decfsz	??_main,f
   491  0181  2980               	goto	u497
   492  0182  0BAE               	decfsz	??_main+1,f
   493  0183  2980               	goto	u497
   494  0184  0000               	nop
   495  0185  2963               	goto	l994
   496  0186  120A  118A  280C   	ljmp	start
   497  0189                     __end_of_main:
   498                           
   499                           	psect	text1
   500  002B                     __ptext1:	
   501 ;; *************** function _conversion *****************
   502 ;; Defined at:
   503 ;;		line 103 in file "lab8.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  puertoANL       1    wreg     unsigned char 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  puertoANL       1   12[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       1       0       0       0
   519 ;;      Temps:          0       2       0       0       0
   520 ;;      Totals:         0       3       0       0       0
   521 ;;Total ram usage:        3 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    2
   524 ;; This function calls:
   525 ;;		___lwdiv
   526 ;;		___lwmod
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _conversion
   534  002B                     _conversion:
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   538                           ;conversion@puertoANL stored from wreg
   539  002B  1283               	bcf	3,5	;RP0=0, select bank0
   540  002C  1303               	bcf	3,6	;RP1=0, select bank0
   541  002D  00AC               	movwf	conversion@puertoANL
   542  002E                     l954:
   543                           
   544                           ;lab8.c: 105:     ADCON0bits.CHS = puertoANL;
   545  002E  082C               	movf	conversion@puertoANL,w
   546  002F  00AA               	movwf	??_conversion
   547  0030  0DAA               	rlf	??_conversion,f
   548  0031  0DAA               	rlf	??_conversion,f
   549  0032  081F               	movf	31,w	;volatile
   550  0033  062A               	xorwf	??_conversion,w
   551  0034  39C3               	andlw	-61
   552  0035  062A               	xorwf	??_conversion,w
   553  0036  009F               	movwf	31	;volatile
   554  0037                     l956:
   555                           
   556                           ;lab8.c: 106:     if (ADCON0bits.GO_DONE==0 && puertoANL == 0){
   557  0037  189F               	btfsc	31,1	;volatile
   558  0038  283A               	goto	u461
   559  0039  283B               	goto	u460
   560  003A                     u461:
   561  003A  28D8               	goto	l988
   562  003B                     u460:
   563  003B                     l958:
   564  003B  082C               	movf	conversion@puertoANL,w
   565  003C  1D03               	btfss	3,2
   566  003D  283F               	goto	u471
   567  003E  2840               	goto	u470
   568  003F                     u471:
   569  003F  28D8               	goto	l988
   570  0040                     u470:
   571  0040                     l960:
   572                           
   573                           ;lab8.c: 108:         a = ((a/100)%10);
   574  0040  300A               	movlw	10
   575  0041  00A4               	movwf	___lwmod@divisor
   576  0042  3000               	movlw	0
   577  0043  00A5               	movwf	___lwmod@divisor+1
   578  0044  3064               	movlw	100
   579  0045  00F4               	movwf	___lwdiv@divisor
   580  0046  3000               	movlw	0
   581  0047  00F5               	movwf	___lwdiv@divisor+1
   582  0048  0840               	movf	_a+1,w
   583  0049  00F7               	movwf	___lwdiv@dividend+1
   584  004A  083F               	movf	_a,w
   585  004B  00F6               	movwf	___lwdiv@dividend
   586  004C  120A  118A  20DC  120A  118A  	fcall	___lwdiv
   587  0051  0875               	movf	?___lwdiv+1,w
   588  0052  1283               	bcf	3,5	;RP0=0, select bank0
   589  0053  1303               	bcf	3,6	;RP1=0, select bank0
   590  0054  00A7               	movwf	___lwmod@dividend+1
   591  0055  0874               	movf	?___lwdiv,w
   592  0056  00A6               	movwf	___lwmod@dividend
   593  0057  120A  118A  2122  120A  118A  	fcall	___lwmod
   594  005C  1283               	bcf	3,5	;RP0=0, select bank0
   595  005D  1303               	bcf	3,6	;RP1=0, select bank0
   596  005E  0825               	movf	?___lwmod+1,w
   597  005F  00C0               	movwf	_a+1
   598  0060  0824               	movf	?___lwmod,w
   599  0061  00BF               	movwf	_a
   600                           
   601                           ;lab8.c: 109:         b = ((b/10)%10);
   602  0062  300A               	movlw	10
   603  0063  00A4               	movwf	___lwmod@divisor
   604  0064  3000               	movlw	0
   605  0065  00A5               	movwf	___lwmod@divisor+1
   606  0066  300A               	movlw	10
   607  0067  00F4               	movwf	___lwdiv@divisor
   608  0068  3000               	movlw	0
   609  0069  00F5               	movwf	___lwdiv@divisor+1
   610  006A  083E               	movf	_b+1,w
   611  006B  00F7               	movwf	___lwdiv@dividend+1
   612  006C  083D               	movf	_b,w
   613  006D  00F6               	movwf	___lwdiv@dividend
   614  006E  120A  118A  20DC  120A  118A  	fcall	___lwdiv
   615  0073  0875               	movf	?___lwdiv+1,w
   616  0074  1283               	bcf	3,5	;RP0=0, select bank0
   617  0075  1303               	bcf	3,6	;RP1=0, select bank0
   618  0076  00A7               	movwf	___lwmod@dividend+1
   619  0077  0874               	movf	?___lwdiv,w
   620  0078  00A6               	movwf	___lwmod@dividend
   621  0079  120A  118A  2122  120A  118A  	fcall	___lwmod
   622  007E  1283               	bcf	3,5	;RP0=0, select bank0
   623  007F  1303               	bcf	3,6	;RP1=0, select bank0
   624  0080  0825               	movf	?___lwmod+1,w
   625  0081  00BE               	movwf	_b+1
   626  0082  0824               	movf	?___lwmod,w
   627  0083  00BD               	movwf	_b
   628                           
   629                           ;lab8.c: 110:         c = (c%10);
   630  0084  300A               	movlw	10
   631  0085  00A4               	movwf	___lwmod@divisor
   632  0086  3000               	movlw	0
   633  0087  00A5               	movwf	___lwmod@divisor+1
   634  0088  083C               	movf	_c+1,w
   635  0089  00A7               	movwf	___lwmod@dividend+1
   636  008A  083B               	movf	_c,w
   637  008B  00A6               	movwf	___lwmod@dividend
   638  008C  120A  118A  2122  120A  118A  	fcall	___lwmod
   639  0091  1283               	bcf	3,5	;RP0=0, select bank0
   640  0092  1303               	bcf	3,6	;RP1=0, select bank0
   641  0093  0825               	movf	?___lwmod+1,w
   642  0094  00BC               	movwf	_c+1
   643  0095  0824               	movf	?___lwmod,w
   644  0096  00BB               	movwf	_c
   645  0097                     l962:
   646                           
   647                           ;lab8.c: 112:          PORTC = Display[a];
   648  0097  083F               	movf	_a,w
   649  0098  3E2F               	addlw	(low (_Display| 0))& (0+255)
   650  0099  0084               	movwf	4
   651  009A  1383               	bcf	3,7	;select IRP bank0
   652  009B  0800               	movf	0,w
   653  009C  0087               	movwf	7	;volatile
   654  009D                     l964:
   655                           
   656                           ;lab8.c: 113:          PORTEbits.RE2 = 1;
   657  009D  1509               	bsf	9,2	;volatile
   658  009E                     l966:
   659                           
   660                           ;lab8.c: 114:          _delay((unsigned long)((5)*(9000000/4000.0)));
   661  009E  300F               	movlw	15
   662  009F  1283               	bcf	3,5	;RP0=0, select bank0
   663  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   664  00A1  00AB               	movwf	??_conversion+1
   665  00A2  309A               	movlw	154
   666  00A3  00AA               	movwf	??_conversion
   667  00A4                     u507:
   668  00A4  0BAA               	decfsz	??_conversion,f
   669  00A5  28A4               	goto	u507
   670  00A6  0BAB               	decfsz	??_conversion+1,f
   671  00A7  28A4               	goto	u507
   672  00A8  0000               	nop
   673  00A9                     l968:
   674                           
   675                           ;lab8.c: 115:          PORTEbits.RE2 = 0;
   676  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   677  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   678  00AB  1109               	bcf	9,2	;volatile
   679  00AC                     l970:
   680                           
   681                           ;lab8.c: 116:          PORTC = Display[b];
   682  00AC  083D               	movf	_b,w
   683  00AD  3E2F               	addlw	(low (_Display| 0))& (0+255)
   684  00AE  0084               	movwf	4
   685  00AF  1383               	bcf	3,7	;select IRP bank0
   686  00B0  0800               	movf	0,w
   687  00B1  0087               	movwf	7	;volatile
   688  00B2                     l972:
   689                           
   690                           ;lab8.c: 117:          PORTEbits.RE0 = 1;
   691  00B2  1409               	bsf	9,0	;volatile
   692  00B3                     l974:
   693                           
   694                           ;lab8.c: 118:          _delay((unsigned long)((5)*(9000000/4000.0)));
   695  00B3  300F               	movlw	15
   696  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   697  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   698  00B6  00AB               	movwf	??_conversion+1
   699  00B7  309A               	movlw	154
   700  00B8  00AA               	movwf	??_conversion
   701  00B9                     u517:
   702  00B9  0BAA               	decfsz	??_conversion,f
   703  00BA  28B9               	goto	u517
   704  00BB  0BAB               	decfsz	??_conversion+1,f
   705  00BC  28B9               	goto	u517
   706  00BD  0000               	nop
   707  00BE                     l976:
   708                           
   709                           ;lab8.c: 119:          PORTEbits.RE0 = 0;
   710  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   711  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   712  00C0  1009               	bcf	9,0	;volatile
   713  00C1                     l978:
   714                           
   715                           ;lab8.c: 120:          PORTC=Display[c];
   716  00C1  083B               	movf	_c,w
   717  00C2  3E2F               	addlw	(low (_Display| 0))& (0+255)
   718  00C3  0084               	movwf	4
   719  00C4  1383               	bcf	3,7	;select IRP bank0
   720  00C5  0800               	movf	0,w
   721  00C6  0087               	movwf	7	;volatile
   722  00C7                     l980:
   723                           
   724                           ;lab8.c: 121:          PORTEbits.RE1 = 1;
   725  00C7  1489               	bsf	9,1	;volatile
   726  00C8                     l982:
   727                           
   728                           ;lab8.c: 122:          _delay((unsigned long)((5)*(9000000/4000.0)));
   729  00C8  300F               	movlw	15
   730  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   731  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   732  00CB  00AB               	movwf	??_conversion+1
   733  00CC  309A               	movlw	154
   734  00CD  00AA               	movwf	??_conversion
   735  00CE                     u527:
   736  00CE  0BAA               	decfsz	??_conversion,f
   737  00CF  28CE               	goto	u527
   738  00D0  0BAB               	decfsz	??_conversion+1,f
   739  00D1  28CE               	goto	u527
   740  00D2  0000               	nop
   741  00D3                     l984:
   742                           
   743                           ;lab8.c: 123:          PORTEbits.RE1 = 0;
   744  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   745  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   746  00D5  1089               	bcf	9,1	;volatile
   747  00D6                     l986:
   748                           
   749                           ;lab8.c: 124:          ADCON0bits.GO_DONE = 1;
   750  00D6  149F               	bsf	31,1	;volatile
   751                           
   752                           ;lab8.c: 125:     }
   753  00D7  28DB               	goto	l74
   754  00D8                     l988:
   755                           
   756                           ;lab8.c: 127:         PORTD = d;
   757  00D8  0839               	movf	_d,w
   758  00D9  0088               	movwf	8	;volatile
   759  00DA                     l990:
   760                           
   761                           ;lab8.c: 128:         ADCON0bits.GO_DONE = 1;
   762  00DA  149F               	bsf	31,1	;volatile
   763  00DB                     l74:
   764  00DB  0008               	return
   765  00DC                     __end_of_conversion:
   766                           
   767                           	psect	text2
   768  0122                     __ptext2:	
   769 ;; *************** function ___lwmod *****************
   770 ;; Defined at:
   771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  divisor         2    4[BANK0 ] unsigned int 
   774 ;;  dividend        2    6[BANK0 ] unsigned int 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  counter         1    9[BANK0 ] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2    4[BANK0 ] unsigned int 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       4       0       0       0
   787 ;;      Locals:         0       1       0       0       0
   788 ;;      Temps:          0       1       0       0       0
   789 ;;      Totals:         0       6       0       0       0
   790 ;;Total ram usage:        6 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_conversion
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function ___lwmod
   802  0122                     ___lwmod:
   803  0122                     l932:	
   804                           ;incstack = 0
   805                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   806                           
   807  0122  1283               	bcf	3,5	;RP0=0, select bank0
   808  0123  1303               	bcf	3,6	;RP1=0, select bank0
   809  0124  0824               	movf	___lwmod@divisor,w
   810  0125  0425               	iorwf	___lwmod@divisor+1,w
   811  0126  1903               	btfsc	3,2
   812  0127  2929               	goto	u401
   813  0128  292A               	goto	u400
   814  0129                     u401:
   815  0129  2959               	goto	l950
   816  012A                     u400:
   817  012A                     l934:
   818  012A  01A9               	clrf	___lwmod@counter
   819  012B  0AA9               	incf	___lwmod@counter,f
   820  012C  2938               	goto	l940
   821  012D                     l936:
   822  012D  3001               	movlw	1
   823  012E                     u415:
   824  012E  1003               	clrc
   825  012F  0DA4               	rlf	___lwmod@divisor,f
   826  0130  0DA5               	rlf	___lwmod@divisor+1,f
   827  0131  3EFF               	addlw	-1
   828  0132  1D03               	skipz
   829  0133  292E               	goto	u415
   830  0134                     l938:
   831  0134  3001               	movlw	1
   832  0135  00A8               	movwf	??___lwmod
   833  0136  0828               	movf	??___lwmod,w
   834  0137  07A9               	addwf	___lwmod@counter,f
   835  0138                     l940:
   836  0138  1FA5               	btfss	___lwmod@divisor+1,7
   837  0139  293B               	goto	u421
   838  013A  293C               	goto	u420
   839  013B                     u421:
   840  013B  292D               	goto	l936
   841  013C                     u420:
   842  013C                     l942:
   843  013C  0825               	movf	___lwmod@divisor+1,w
   844  013D  0227               	subwf	___lwmod@dividend+1,w
   845  013E  1D03               	skipz
   846  013F  2942               	goto	u435
   847  0140  0824               	movf	___lwmod@divisor,w
   848  0141  0226               	subwf	___lwmod@dividend,w
   849  0142                     u435:
   850  0142  1C03               	skipc
   851  0143  2945               	goto	u431
   852  0144  2946               	goto	u430
   853  0145                     u431:
   854  0145  294C               	goto	l946
   855  0146                     u430:
   856  0146                     l944:
   857  0146  0824               	movf	___lwmod@divisor,w
   858  0147  02A6               	subwf	___lwmod@dividend,f
   859  0148  0825               	movf	___lwmod@divisor+1,w
   860  0149  1C03               	skipc
   861  014A  03A7               	decf	___lwmod@dividend+1,f
   862  014B  02A7               	subwf	___lwmod@dividend+1,f
   863  014C                     l946:
   864  014C  3001               	movlw	1
   865  014D                     u445:
   866  014D  1003               	clrc
   867  014E  0CA5               	rrf	___lwmod@divisor+1,f
   868  014F  0CA4               	rrf	___lwmod@divisor,f
   869  0150  3EFF               	addlw	-1
   870  0151  1D03               	skipz
   871  0152  294D               	goto	u445
   872  0153                     l948:
   873  0153  3001               	movlw	1
   874  0154  02A9               	subwf	___lwmod@counter,f
   875  0155  1D03               	btfss	3,2
   876  0156  2958               	goto	u451
   877  0157  2959               	goto	u450
   878  0158                     u451:
   879  0158  293C               	goto	l942
   880  0159                     u450:
   881  0159                     l950:
   882  0159  0827               	movf	___lwmod@dividend+1,w
   883  015A  00A5               	movwf	?___lwmod+1
   884  015B  0826               	movf	___lwmod@dividend,w
   885  015C  00A4               	movwf	?___lwmod
   886  015D                     l442:
   887  015D  0008               	return
   888  015E                     __end_of___lwmod:
   889                           
   890                           	psect	text3
   891  00DC                     __ptext3:	
   892 ;; *************** function ___lwdiv *****************
   893 ;; Defined at:
   894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  divisor         2    4[COMMON] unsigned int 
   897 ;;  dividend        2    6[COMMON] unsigned int 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  quotient        2    2[BANK0 ] unsigned int 
   900 ;;  counter         1    1[BANK0 ] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2    4[COMMON] unsigned int 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         4       0       0       0       0
   911 ;;      Locals:         0       3       0       0       0
   912 ;;      Temps:          0       1       0       0       0
   913 ;;      Totals:         4       4       0       0       0
   914 ;;Total ram usage:        8 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_conversion
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function ___lwdiv
   926  00DC                     ___lwdiv:
   927  00DC                     l906:	
   928                           ;incstack = 0
   929                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   930                           
   931  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   932  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   933  00DE  01A2               	clrf	___lwdiv@quotient
   934  00DF  01A3               	clrf	___lwdiv@quotient+1
   935  00E0                     l908:
   936  00E0  0874               	movf	___lwdiv@divisor,w
   937  00E1  0475               	iorwf	___lwdiv@divisor+1,w
   938  00E2  1903               	btfsc	3,2
   939  00E3  28E5               	goto	u331
   940  00E4  28E6               	goto	u330
   941  00E5                     u331:
   942  00E5  291D               	goto	l928
   943  00E6                     u330:
   944  00E6                     l910:
   945  00E6  01A1               	clrf	___lwdiv@counter
   946  00E7  0AA1               	incf	___lwdiv@counter,f
   947  00E8  28F4               	goto	l916
   948  00E9                     l912:
   949  00E9  3001               	movlw	1
   950  00EA                     u345:
   951  00EA  1003               	clrc
   952  00EB  0DF4               	rlf	___lwdiv@divisor,f
   953  00EC  0DF5               	rlf	___lwdiv@divisor+1,f
   954  00ED  3EFF               	addlw	-1
   955  00EE  1D03               	skipz
   956  00EF  28EA               	goto	u345
   957  00F0                     l914:
   958  00F0  3001               	movlw	1
   959  00F1  00A0               	movwf	??___lwdiv
   960  00F2  0820               	movf	??___lwdiv,w
   961  00F3  07A1               	addwf	___lwdiv@counter,f
   962  00F4                     l916:
   963  00F4  1FF5               	btfss	___lwdiv@divisor+1,7
   964  00F5  28F7               	goto	u351
   965  00F6  28F8               	goto	u350
   966  00F7                     u351:
   967  00F7  28E9               	goto	l912
   968  00F8                     u350:
   969  00F8                     l918:
   970  00F8  3001               	movlw	1
   971  00F9                     u365:
   972  00F9  1003               	clrc
   973  00FA  0DA2               	rlf	___lwdiv@quotient,f
   974  00FB  0DA3               	rlf	___lwdiv@quotient+1,f
   975  00FC  3EFF               	addlw	-1
   976  00FD  1D03               	skipz
   977  00FE  28F9               	goto	u365
   978  00FF  0875               	movf	___lwdiv@divisor+1,w
   979  0100  0277               	subwf	___lwdiv@dividend+1,w
   980  0101  1D03               	skipz
   981  0102  2905               	goto	u375
   982  0103  0874               	movf	___lwdiv@divisor,w
   983  0104  0276               	subwf	___lwdiv@dividend,w
   984  0105                     u375:
   985  0105  1C03               	skipc
   986  0106  2908               	goto	u371
   987  0107  2909               	goto	u370
   988  0108                     u371:
   989  0108  2910               	goto	l924
   990  0109                     u370:
   991  0109                     l920:
   992  0109  0874               	movf	___lwdiv@divisor,w
   993  010A  02F6               	subwf	___lwdiv@dividend,f
   994  010B  0875               	movf	___lwdiv@divisor+1,w
   995  010C  1C03               	skipc
   996  010D  03F7               	decf	___lwdiv@dividend+1,f
   997  010E  02F7               	subwf	___lwdiv@dividend+1,f
   998  010F                     l922:
   999  010F  1422               	bsf	___lwdiv@quotient,0
  1000  0110                     l924:
  1001  0110  3001               	movlw	1
  1002  0111                     u385:
  1003  0111  1003               	clrc
  1004  0112  0CF5               	rrf	___lwdiv@divisor+1,f
  1005  0113  0CF4               	rrf	___lwdiv@divisor,f
  1006  0114  3EFF               	addlw	-1
  1007  0115  1D03               	skipz
  1008  0116  2911               	goto	u385
  1009  0117                     l926:
  1010  0117  3001               	movlw	1
  1011  0118  02A1               	subwf	___lwdiv@counter,f
  1012  0119  1D03               	btfss	3,2
  1013  011A  291C               	goto	u391
  1014  011B  291D               	goto	u390
  1015  011C                     u391:
  1016  011C  28F8               	goto	l918
  1017  011D                     u390:
  1018  011D                     l928:
  1019  011D  0823               	movf	___lwdiv@quotient+1,w
  1020  011E  00F5               	movwf	?___lwdiv+1
  1021  011F  0822               	movf	___lwdiv@quotient,w
  1022  0120  00F4               	movwf	?___lwdiv
  1023  0121                     l432:
  1024  0121  0008               	return
  1025  0122                     __end_of___lwdiv:
  1026                           
  1027                           	psect	text4
  1028  01B3                     __ptext4:	
  1029 ;; *************** function _config *****************
  1030 ;; Defined at:
  1031 ;;		line 72 in file "lab8.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _config
  1061  01B3                     _config:
  1062  01B3                     l714:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _config: [wreg+status,2]
  1065                           
  1066                           
  1067                           ;lab8.c: 73:     ANSEL = 0b00000000;
  1068  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  1069  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  1070  01B5  0188               	clrf	8	;volatile
  1071                           
  1072                           ;lab8.c: 74:     ANSELH = 0b00000000;
  1073  01B6  0189               	clrf	9	;volatile
  1074  01B7                     l716:
  1075                           
  1076                           ;lab8.c: 76:     TRISA = 0b00000011;
  1077  01B7  3003               	movlw	3
  1078  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1079  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1080  01BA  0085               	movwf	5	;volatile
  1081  01BB                     l718:
  1082                           
  1083                           ;lab8.c: 77:     TRISB = 0b00000000;
  1084  01BB  0186               	clrf	6	;volatile
  1085  01BC                     l720:
  1086                           
  1087                           ;lab8.c: 78:     TRISC = 0b00000000;
  1088  01BC  0187               	clrf	7	;volatile
  1089  01BD                     l722:
  1090                           
  1091                           ;lab8.c: 79:     TRISD = 0b00000000;
  1092  01BD  0188               	clrf	8	;volatile
  1093  01BE                     l724:
  1094                           
  1095                           ;lab8.c: 80:     TRISE = 0b000;
  1096  01BE  0189               	clrf	9	;volatile
  1097  01BF                     l726:
  1098                           
  1099                           ;lab8.c: 84:     PORTD = 0b00000000;
  1100  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1101  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1102  01C1  0188               	clrf	8	;volatile
  1103  01C2                     l728:
  1104                           
  1105                           ;lab8.c: 85:     PORTC = 0b00000000;
  1106  01C2  0187               	clrf	7	;volatile
  1107  01C3                     l730:
  1108                           
  1109                           ;lab8.c: 86:     PORTE = 0b000;
  1110  01C3  0189               	clrf	9	;volatile
  1111  01C4                     l732:
  1112                           
  1113                           ;lab8.c: 88:     INTCONbits.GIE = 1;
  1114  01C4  178B               	bsf	11,7	;volatile
  1115  01C5                     l734:
  1116                           
  1117                           ;lab8.c: 89:     INTCONbits.PEIE = 1;
  1118  01C5  170B               	bsf	11,6	;volatile
  1119  01C6                     l736:
  1120                           
  1121                           ;lab8.c: 90:     INTCONbits.INTE = 1;
  1122  01C6  160B               	bsf	11,4	;volatile
  1123  01C7                     l738:
  1124                           
  1125                           ;lab8.c: 92:     ADCON0bits.ADCS0 = 1;
  1126  01C7  171F               	bsf	31,6	;volatile
  1127  01C8                     l740:
  1128                           
  1129                           ;lab8.c: 93:     ADCON0bits.ADCS1 = 0;
  1130  01C8  139F               	bcf	31,7	;volatile
  1131  01C9                     l742:
  1132                           
  1133                           ;lab8.c: 95:     ADCON0bits.ADON = 1;
  1134  01C9  141F               	bsf	31,0	;volatile
  1135  01CA                     l744:
  1136                           
  1137                           ;lab8.c: 96:     ADCON1bits.ADFM = 0;
  1138  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1139  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1140  01CC  139F               	bcf	31,7	;volatile
  1141  01CD                     l746:
  1142                           
  1143                           ;lab8.c: 98:     PIE1bits.ADIE = 1;
  1144  01CD  170C               	bsf	12,6	;volatile
  1145  01CE                     l748:
  1146                           
  1147                           ;lab8.c: 99:     PIR1bits.ADIF = 0;
  1148  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1149  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1150  01D0  130C               	bcf	12,6	;volatile
  1151  01D1                     l69:
  1152  01D1  0008               	return
  1153  01D2                     __end_of_config:
  1154                           
  1155                           	psect	text5
  1156  0189                     __ptext5:	
  1157 ;; *************** function _ISR *****************
  1158 ;; Defined at:
  1159 ;;		line 47 in file "lab8.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          4       0       0       0       0
  1176 ;;      Totals:         4       0       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		Interrupt level 1
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _ISR
  1188  0189                     _ISR:
  1189  0189                     i1l890:
  1190                           
  1191                           ;lab8.c: 49:      if (PIR1bits.ADIF ==1){
  1192  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1193  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1194  018B  1F0C               	btfss	12,6	;volatile
  1195  018C  298E               	goto	u32_21
  1196  018D  298F               	goto	u32_20
  1197  018E                     u32_21:
  1198  018E  29AC               	goto	i1l58
  1199  018F                     u32_20:
  1200  018F                     i1l892:
  1201                           
  1202                           ;lab8.c: 50:         PIR1bits.ADIF = 0;
  1203  018F  130C               	bcf	12,6	;volatile
  1204  0190                     i1l894:
  1205                           
  1206                           ;lab8.c: 52:         a = ADRESH;
  1207  0190  081E               	movf	30,w	;volatile
  1208  0191  00F0               	movwf	??_ISR
  1209  0192  01F1               	clrf	??_ISR+1
  1210  0193  0870               	movf	??_ISR,w
  1211  0194  00BF               	movwf	_a
  1212  0195  0871               	movf	??_ISR+1,w
  1213  0196  00C0               	movwf	_a+1
  1214                           
  1215                           ;lab8.c: 53:         b = ADRESH;
  1216  0197  081E               	movf	30,w	;volatile
  1217  0198  00F0               	movwf	??_ISR
  1218  0199  01F1               	clrf	??_ISR+1
  1219  019A  0870               	movf	??_ISR,w
  1220  019B  00BD               	movwf	_b
  1221  019C  0871               	movf	??_ISR+1,w
  1222  019D  00BE               	movwf	_b+1
  1223                           
  1224                           ;lab8.c: 54:         c = ADRESH;
  1225  019E  081E               	movf	30,w	;volatile
  1226  019F  00F0               	movwf	??_ISR
  1227  01A0  01F1               	clrf	??_ISR+1
  1228  01A1  0870               	movf	??_ISR,w
  1229  01A2  00BB               	movwf	_c
  1230  01A3  0871               	movf	??_ISR+1,w
  1231  01A4  00BC               	movwf	_c+1
  1232                           
  1233                           ;lab8.c: 55:         d = ADRESH;
  1234  01A5  081E               	movf	30,w	;volatile
  1235  01A6  00F0               	movwf	??_ISR
  1236  01A7  01F1               	clrf	??_ISR+1
  1237  01A8  0870               	movf	??_ISR,w
  1238  01A9  00B9               	movwf	_d
  1239  01AA  0871               	movf	??_ISR+1,w
  1240  01AB  00BA               	movwf	_d+1
  1241  01AC                     i1l58:
  1242  01AC  0873               	movf	??_ISR+3,w
  1243  01AD  008A               	movwf	10
  1244  01AE  0E72               	swapf	??_ISR+2,w
  1245  01AF  0083               	movwf	3
  1246  01B0  0EFE               	swapf	btemp,f
  1247  01B1  0E7E               	swapf	btemp,w
  1248  01B2  0009               	retfie
  1249  01B3                     __end_of_ISR:
  1250  007E                     btemp	set	126	;btemp
  1251  007E                     wtemp0	set	126
  1252                           
  1253                           	psect	intentry
  1254  0004                     __pintentry:	
  1255                           ;incstack = 0
  1256                           ; Regs used in _ISR: [wreg]
  1257                           
  1258  0004                     interrupt_function:
  1259  007E                     saved_w	set	btemp
  1260  0004  00FE               	movwf	btemp
  1261  0005  0E03               	swapf	3,w
  1262  0006  00F2               	movwf	??_ISR+2
  1263  0007  080A               	movf	10,w
  1264  0008  00F3               	movwf	??_ISR+3
  1265  0009  120A  118A  2989   	ljmp	_ISR
  1266                           
  1267                           	psect	config
  1268                           
  1269                           ;Config register CONFIG1 @ 0x2007
  1270                           ;	Oscillator Selection bits
  1271                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1272                           ;	Watchdog Timer Enable bit
  1273                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1274                           ;	Power-up Timer Enable bit
  1275                           ;	PWRTE = OFF, PWRT disabled
  1276                           ;	RE3/MCLR pin function select bit
  1277                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1278                           ;	Code Protection bit
  1279                           ;	CP = OFF, Program memory code protection is disabled
  1280                           ;	Data Code Protection bit
  1281                           ;	CPD = OFF, Data memory code protection is disabled
  1282                           ;	Brown Out Reset Selection bits
  1283                           ;	BOREN = OFF, BOR disabled
  1284                           ;	Internal External Switchover bit
  1285                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1286                           ;	Fail-Safe Clock Monitor Enabled bit
  1287                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1288                           ;	Low Voltage Programming Enable bit
  1289                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1290                           ;	In-Circuit Debugger Mode bit
  1291                           ;	DEBUG = 0x1, unprogrammed default
  1292  2007                     	org	8199
  1293  2007  20D4               	dw	8404
  1294                           
  1295                           ;Config register CONFIG2 @ 0x2008
  1296                           ;	Brown-out Reset Selection bit
  1297                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1298                           ;	Flash Program Memory Self Write Enable bits
  1299                           ;	WRT = OFF, Write protection off
  1300  2008                     	org	8200
  1301  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     15      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _conversion->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _conversion->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1435
                                             13 BANK0      2     2      0
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     3      0    1435
                                             10 BANK0      3     3      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     772
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _conversion
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      21       5       41.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:21:35 2021

                      _a 003F                        _b 003D                        _c 003B  
                      _d 0039                        pc 0002                       l74 00DB  
                     l69 01D1                       fsr 0004                      l432 0121  
                    l442 015D                      l720 01BC                      l730 01C3  
                    l722 01BD                      l714 01B3                      l740 01C8  
                    l732 01C4                      l724 01BE                      l716 01B7  
                    l742 01C9                      l734 01C5                      l726 01BF  
                    l718 01BB                      l910 00E6                      l744 01CA  
                    l736 01C6                      l728 01C2                      l920 0109  
                    l912 00E9                      l746 01CD                      l738 01C7  
                    l922 010F                      l914 00F0                      l906 00DC  
                    l748 01CE                      l924 0110                      l916 00F4  
                    l908 00E0                      l940 0138                      l932 0122  
                    l926 0117                      l918 00F8                      l942 013C  
                    l934 012A                      l950 0159                      l928 011D  
                    l944 0146                      l936 012D                      l960 0040  
                    l946 014C                      l938 0134                      l970 00AC  
                    l962 0097                      l954 002E                      l948 0153  
                    l980 00C7                      l972 00B2                      l964 009D  
                    l956 0037                      l990 00DA                      l982 00C8  
                    l974 00B3                      l966 009E                      l958 003B  
                    l984 00D3                      l976 00BE                      l968 00A9  
                    l992 015E                      l986 00D6                      l978 00C1  
                    l994 0163                      l988 00D8                      l996 0169  
                    l998 0174                      u400 012A                      u401 0129  
                    u330 00E6                      u331 00E5                      u420 013C  
                    u421 013B                      u350 00F8                      u430 0146  
                    u351 00F7                      u431 0145                      u415 012E  
                    u345 00EA                      u370 0109                      u450 0159  
                    u371 0108                      u451 0158                      u435 0142  
                    u507 00A4                      u460 003B                      _ISR 0189  
                    u365 00F9                      u445 014D                      u517 00B9  
                    u461 003A                      u390 011D                      u470 0040  
                    u391 011C                      u375 0105                      u527 00CE  
                    u471 003F                      u385 0111                      u487 016F  
                    u497 0180                      _led 0078                      fsr0 0004  
                    indf 0000                     ?_ISR 0070                     l1000 017A  
                   i1l58 01AC                     _main 015E                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 0122          __end_of___lwmod 015E  
                  i1l890 0189                    i1l892 018F                    i1l894 0190  
                  u32_20 018F                    u32_21 018E                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0189  
                 ??_main 002D                   _ADRESH 001E                   _ANSELH 0189  
              ??___lwdiv 0020                ??___lwmod 0028                   _config 01B3  
                 saved_w 007E  __end_of__initialization 0027           __pcstackCOMMON 0070  
           __pidataBANK0 01E5               __pbssBANK0 0039               __pmaintext 015E  
             __pintentry 0004                  ?_config 0070               _conversion 002B  
                _Display 002F                  ___lwdiv 00DC                  ___lwmod 0122  
        __size_of_config 001F                  __ptext1 002B                  __ptext2 0122  
                __ptext3 00DC                  __ptext4 01B3                  __ptext5 0189  
           __size_of_ISR 002A     end_of_initialization 0027                _PORTEbits 0009  
            ?_conversion 0070           __end_of_config 01D2      start_initialization 000F  
            __end_of_ISR 01B3      conversion@puertoANL 002C               init_fetch0 01D2  
               ??_config 0074              __pdataBANK0 002F      __size_of_conversion 00B1  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0076                 ?___lwdiv 0074                 ?___lwmod 0024  
       ___lwdiv@quotient 0022        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
           ??_conversion 002A         __size_of___lwdiv 0046         __size_of___lwmod 003C  
     __end_of_conversion 00DC          ___lwdiv@divisor 0074          ___lwdiv@counter 0021  
          __size_of_main 002B               _INTCONbits 000B                 init_ram0 01D6  
               intlevel1 0000         ___lwmod@dividend 0026          ___lwmod@divisor 0024  
        ___lwmod@counter 0029  
