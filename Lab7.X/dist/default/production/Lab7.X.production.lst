

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 14 18:10:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  01AC                     __pidataBANK0:
   215                           
   216                           ;initializer for _Display
   217  01AC  343F               	retlw	63
   218  01AD  3406               	retlw	6
   219  01AE  345B               	retlw	91
   220  01AF  344F               	retlw	79
   221  01B0  3466               	retlw	102
   222  01B1  346D               	retlw	109
   223  01B2  347D               	retlw	125
   224  01B3  3407               	retlw	7
   225  01B4  347F               	retlw	127
   226  01B5  346F               	retlw	111
   227  0009                     _PORTEbits	set	9
   228  0006                     _PORTBbits	set	6
   229  0009                     _PORTE	set	9
   230  0007                     _PORTC	set	7
   231  0005                     _PORTA	set	5
   232  0006                     _PORTB	set	6
   233  0001                     _TMR0	set	1
   234  0008                     _PORTD	set	8
   235  000B                     _INTCONbits	set	11
   236  005A                     _T0IF	set	90
   237  0081                     _OPTION_REGbits	set	129
   238  008F                     _OSCCONbits	set	143
   239  0089                     _TRISE	set	137
   240  0087                     _TRISC	set	135
   241  0088                     _TRISD	set	136
   242  0086                     _TRISB	set	134
   243  0085                     _TRISA	set	133
   244  0188                     _ANSEL	set	392
   245  0189                     _ANSELH	set	393
   246                           
   247                           	psect	cinit
   248  0011                     start_initialization:	
   249                           ; #config settings
   250                           
   251  0011                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  0011  1383               	bcf	3,7	;select IRP bank0
   255  0012  302A               	movlw	low (__pdataBANK0+10)
   256  0013  00FD               	movwf	btemp+-1
   257  0014  3001               	movlw	high __pidataBANK0
   258  0015  00FE               	movwf	btemp
   259  0016  30AC               	movlw	low __pidataBANK0
   260  0017  00FF               	movwf	btemp+1
   261  0018  3020               	movlw	low __pdataBANK0
   262  0019  0084               	movwf	4
   263  001A  120A  118A  219D  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to BANK0
   266  001F  01AA               	clrf	__pbssBANK0& (0+127)
   267  0020  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   268  0021  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   269  0022  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   270  0023  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   271  0024  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0025  01F0               	clrf	__pbssCOMMON& (0+127)
   275  0026  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0027  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   277  0028  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   278  0029  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   279  002A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   280  002B                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  002B                     __end_of__initialization:
   284  002B  0183               	clrf	3
   285  002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0070                     __pbssCOMMON:
   289  0070                     _centenas:
   290  0070                     	ds	2
   291  0072                     _decenas:
   292  0072                     	ds	2
   293  0074                     _unidades:
   294  0074                     	ds	2
   295                           
   296                           	psect	bssBANK0
   297  002A                     __pbssBANK0:
   298  002A                     _x:
   299  002A                     	ds	2
   300  002C                     _estado2:
   301  002C                     	ds	2
   302  002E                     _estado1:
   303  002E                     	ds	2
   304                           
   305                           	psect	dataBANK0
   306  0020                     __pdataBANK0:
   307  0020                     _Display:
   308  0020                     	ds	10
   309                           
   310                           	psect	inittext
   311  0199                     init_fetch0:	
   312                           ;	Called with low address in FSR and high address in W
   313                           
   314  0199  087E               	movf	btemp,w
   315  019A  008A               	movwf	10
   316  019B  087F               	movf	btemp+1,w
   317  019C  0082               	movwf	2
   318  019D                     init_ram0:	
   319                           ;Called with:
   320                           ;	high address of idata address in btemp 
   321                           ;	low address of idata address in btemp+1 
   322                           ;	low address of data in FSR
   323                           ;	high address + 1 of data in btemp-1
   324                           
   325  019D  120A  118A  2199  120A  118A  	fcall	init_fetch0
   326  01A2  0080               	movwf	0
   327  01A3  0A84               	incf	4,f
   328  01A4  0804               	movf	4,w
   329  01A5  067D               	xorwf	btemp+-1,w
   330  01A6  1903               	btfsc	3,2
   331  01A7  3400               	retlw	0
   332  01A8  0AFF               	incf	btemp+1,f
   333  01A9  1903               	btfsc	3,2
   334  01AA  0AFE               	incf	btemp,f
   335  01AB  299D               	goto	init_ram0
   336                           
   337                           	psect	cstackCOMMON
   338  0076                     __pcstackCOMMON:
   339  0076                     ?_multiplex:
   340  0076                     ??_multiplex:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_config:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0076                     ?_contador:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0076                     ?_reset:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0076                     ?_ISR:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0076                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0076                     	ds	2
   361  0078                     ??_ISR:
   362                           
   363                           ; 1 bytes @ 0x2
   364  0078                     	ds	4
   365                           
   366                           	psect	cstackBANK0
   367  0030                     __pcstackBANK0:
   368  0030                     ??_config:
   369  0030                     ??_contador:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0030                     ??_reset:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0030                     	ds	1
   378  0031                     ??_main:
   379                           
   380                           	psect	maintext
   381  002F                     __pmaintext:	
   382                           ; 1 bytes @ 0x1
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 50 in file "lab7.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		_config
   410 ;;		_contador
   411 ;;		_reset
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _main
   419  002F                     _main:
   420  002F                     l1036:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   423                           
   424                           
   425                           ;lab7.c: 51:     config();
   426  002F  120A  118A  2156  120A  118A  	fcall	_config
   427  0034                     l1038:
   428                           
   429                           ;lab7.c: 53:             if( unidades >9){
   430  0034  0875               	movf	_unidades+1,w
   431  0035  3A80               	xorlw	128
   432  0036  00FF               	movwf	btemp+1
   433  0037  3080               	movlw	128
   434  0038  027F               	subwf	btemp+1,w
   435  0039  1D03               	skipz
   436  003A  283D               	goto	u455
   437  003B  300A               	movlw	10
   438  003C  0274               	subwf	_unidades,w
   439  003D                     u455:
   440  003D  1C03               	skipc
   441  003E  2840               	goto	u451
   442  003F  2841               	goto	u450
   443  0040                     u451:
   444  0040  2849               	goto	l1044
   445  0041                     u450:
   446  0041                     l1040:
   447                           
   448                           ;lab7.c: 54:             unidades = 0;
   449  0041  01F4               	clrf	_unidades
   450  0042  01F5               	clrf	_unidades+1
   451  0043                     l1042:
   452                           
   453                           ;lab7.c: 55:             decenas++;
   454  0043  3001               	movlw	1
   455  0044  07F2               	addwf	_decenas,f
   456  0045  1803               	skipnc
   457  0046  0AF3               	incf	_decenas+1,f
   458  0047  3000               	movlw	0
   459  0048  07F3               	addwf	_decenas+1,f
   460  0049                     l1044:
   461                           
   462                           ;lab7.c: 57:             if (unidades < 0){
   463  0049  1FF5               	btfss	_unidades+1,7
   464  004A  284C               	goto	u461
   465  004B  284D               	goto	u460
   466  004C                     u461:
   467  004C  2857               	goto	l1048
   468  004D                     u460:
   469  004D                     l1046:
   470                           
   471                           ;lab7.c: 58:             unidades = 9;
   472  004D  3009               	movlw	9
   473  004E  00F4               	movwf	_unidades
   474  004F  3000               	movlw	0
   475  0050  00F5               	movwf	_unidades+1
   476                           
   477                           ;lab7.c: 59:             decenas--;
   478  0051  30FF               	movlw	255
   479  0052  07F2               	addwf	_decenas,f
   480  0053  1803               	skipnc
   481  0054  0AF3               	incf	_decenas+1,f
   482  0055  30FF               	movlw	255
   483  0056  07F3               	addwf	_decenas+1,f
   484  0057                     l1048:
   485                           
   486                           ;lab7.c: 62:             if ( decenas >9){
   487  0057  0873               	movf	_decenas+1,w
   488  0058  3A80               	xorlw	128
   489  0059  00FF               	movwf	btemp+1
   490  005A  3080               	movlw	128
   491  005B  027F               	subwf	btemp+1,w
   492  005C  1D03               	skipz
   493  005D  2860               	goto	u475
   494  005E  300A               	movlw	10
   495  005F  0272               	subwf	_decenas,w
   496  0060                     u475:
   497  0060  1C03               	skipc
   498  0061  2863               	goto	u471
   499  0062  2864               	goto	u470
   500  0063                     u471:
   501  0063  286C               	goto	l1054
   502  0064                     u470:
   503  0064                     l1050:
   504                           
   505                           ;lab7.c: 63:             decenas = 0;
   506  0064  01F2               	clrf	_decenas
   507  0065  01F3               	clrf	_decenas+1
   508  0066                     l1052:
   509                           
   510                           ;lab7.c: 64:             centenas++;
   511  0066  3001               	movlw	1
   512  0067  07F0               	addwf	_centenas,f
   513  0068  1803               	skipnc
   514  0069  0AF1               	incf	_centenas+1,f
   515  006A  3000               	movlw	0
   516  006B  07F1               	addwf	_centenas+1,f
   517  006C                     l1054:
   518                           
   519                           ;lab7.c: 66:              if ( decenas <0) {
   520  006C  1FF3               	btfss	_decenas+1,7
   521  006D  286F               	goto	u481
   522  006E  2870               	goto	u480
   523  006F                     u481:
   524  006F  287A               	goto	l1058
   525  0070                     u480:
   526  0070                     l1056:
   527                           
   528                           ;lab7.c: 67:             decenas = 9;
   529  0070  3009               	movlw	9
   530  0071  00F2               	movwf	_decenas
   531  0072  3000               	movlw	0
   532  0073  00F3               	movwf	_decenas+1
   533                           
   534                           ;lab7.c: 68:             centenas--;
   535  0074  30FF               	movlw	255
   536  0075  07F0               	addwf	_centenas,f
   537  0076  1803               	skipnc
   538  0077  0AF1               	incf	_centenas+1,f
   539  0078  30FF               	movlw	255
   540  0079  07F1               	addwf	_centenas+1,f
   541  007A                     l1058:
   542                           
   543                           ;lab7.c: 70:             if ( centenas >9) {
   544  007A  0871               	movf	_centenas+1,w
   545  007B  3A80               	xorlw	128
   546  007C  00FF               	movwf	btemp+1
   547  007D  3080               	movlw	128
   548  007E  027F               	subwf	btemp+1,w
   549  007F  1D03               	skipz
   550  0080  2883               	goto	u495
   551  0081  300A               	movlw	10
   552  0082  0270               	subwf	_centenas,w
   553  0083                     u495:
   554  0083  1C03               	skipc
   555  0084  2886               	goto	u491
   556  0085  2887               	goto	u490
   557  0086                     u491:
   558  0086  2889               	goto	l1062
   559  0087                     u490:
   560  0087                     l1060:
   561                           
   562                           ;lab7.c: 71:             centenas = 0;
   563  0087  01F0               	clrf	_centenas
   564  0088  01F1               	clrf	_centenas+1
   565  0089                     l1062:
   566                           
   567                           ;lab7.c: 73:              if ( centenas <0) {
   568  0089  1FF1               	btfss	_centenas+1,7
   569  008A  288C               	goto	u501
   570  008B  288D               	goto	u500
   571  008C                     u501:
   572  008C  2891               	goto	l1066
   573  008D                     u500:
   574  008D                     l1064:
   575                           
   576                           ;lab7.c: 74:             centenas = 9;
   577  008D  3009               	movlw	9
   578  008E  00F0               	movwf	_centenas
   579  008F  3000               	movlw	0
   580  0090  00F1               	movwf	_centenas+1
   581  0091                     l1066:
   582                           
   583                           ;lab7.c: 79:         contador();
   584  0091  120A  118A  20DD  120A  118A  	fcall	_contador
   585  0096                     l1068:
   586                           
   587                           ;lab7.c: 80:         reset();
   588  0096  120A  118A  209F  120A  118A  	fcall	_reset
   589  009B  2834               	goto	l1038
   590  009C  120A  118A  280E   	ljmp	start
   591  009F                     __end_of_main:
   592                           
   593                           	psect	text1
   594  009F                     __ptext1:	
   595 ;; *************** function _reset *****************
   596 ;; Defined at:
   597 ;;		line 156 in file "lab7.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, btemp+1
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    2
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _reset
   627  009F                     _reset:
   628  009F                     l1020:	
   629                           ;incstack = 0
   630                           ; Regs used in _reset: [wreg+status,2+status,0+btemp+1]
   631                           
   632                           
   633                           ;lab7.c: 157:     if ((unidades > 5) && (decenas == 5) && (centenas == 2)){
   634  009F  0875               	movf	_unidades+1,w
   635  00A0  3A80               	xorlw	128
   636  00A1  00FF               	movwf	btemp+1
   637  00A2  3080               	movlw	128
   638  00A3  027F               	subwf	btemp+1,w
   639  00A4  1D03               	skipz
   640  00A5  28A8               	goto	u395
   641  00A6  3006               	movlw	6
   642  00A7  0274               	subwf	_unidades,w
   643  00A8                     u395:
   644  00A8  1C03               	skipc
   645  00A9  28AB               	goto	u391
   646  00AA  28AC               	goto	u390
   647  00AB                     u391:
   648  00AB  28C0               	goto	l1028
   649  00AC                     u390:
   650  00AC                     l1022:
   651  00AC  3005               	movlw	5
   652  00AD  0672               	xorwf	_decenas,w
   653  00AE  0473               	iorwf	_decenas+1,w
   654  00AF  1D03               	btfss	3,2
   655  00B0  28B2               	goto	u401
   656  00B1  28B3               	goto	u400
   657  00B2                     u401:
   658  00B2  28C0               	goto	l1028
   659  00B3                     u400:
   660  00B3                     l1024:
   661  00B3  3002               	movlw	2
   662  00B4  0670               	xorwf	_centenas,w
   663  00B5  0471               	iorwf	_centenas+1,w
   664  00B6  1D03               	btfss	3,2
   665  00B7  28B9               	goto	u411
   666  00B8  28BA               	goto	u410
   667  00B9                     u411:
   668  00B9  28C0               	goto	l1028
   669  00BA                     u410:
   670  00BA                     l1026:
   671                           
   672                           ;lab7.c: 158:             unidades = 0;
   673  00BA  01F4               	clrf	_unidades
   674  00BB  01F5               	clrf	_unidades+1
   675                           
   676                           ;lab7.c: 159:             decenas = 0;
   677  00BC  01F2               	clrf	_decenas
   678  00BD  01F3               	clrf	_decenas+1
   679                           
   680                           ;lab7.c: 160:             centenas = 0;
   681  00BE  01F0               	clrf	_centenas
   682  00BF  01F1               	clrf	_centenas+1
   683  00C0                     l1028:
   684                           
   685                           ;lab7.c: 163:      if ((unidades < 0) && (decenas == 0) && (centenas == 0)){
   686  00C0  1FF5               	btfss	_unidades+1,7
   687  00C1  28C3               	goto	u421
   688  00C2  28C4               	goto	u420
   689  00C3                     u421:
   690  00C3  28DC               	goto	l100
   691  00C4                     u420:
   692  00C4                     l1030:
   693  00C4  0872               	movf	_decenas,w
   694  00C5  0473               	iorwf	_decenas+1,w
   695  00C6  1D03               	btfss	3,2
   696  00C7  28C9               	goto	u431
   697  00C8  28CA               	goto	u430
   698  00C9                     u431:
   699  00C9  28DC               	goto	l100
   700  00CA                     u430:
   701  00CA                     l1032:
   702  00CA  0870               	movf	_centenas,w
   703  00CB  0471               	iorwf	_centenas+1,w
   704  00CC  1D03               	btfss	3,2
   705  00CD  28CF               	goto	u441
   706  00CE  28D0               	goto	u440
   707  00CF                     u441:
   708  00CF  28DC               	goto	l100
   709  00D0                     u440:
   710  00D0                     l1034:
   711                           
   712                           ;lab7.c: 164:             unidades = 5;
   713  00D0  3005               	movlw	5
   714  00D1  00F4               	movwf	_unidades
   715  00D2  3000               	movlw	0
   716  00D3  00F5               	movwf	_unidades+1
   717                           
   718                           ;lab7.c: 165:             decenas = 5;
   719  00D4  3005               	movlw	5
   720  00D5  00F2               	movwf	_decenas
   721  00D6  3000               	movlw	0
   722  00D7  00F3               	movwf	_decenas+1
   723                           
   724                           ;lab7.c: 166:             centenas = 2;
   725  00D8  3002               	movlw	2
   726  00D9  00F0               	movwf	_centenas
   727  00DA  3000               	movlw	0
   728  00DB  00F1               	movwf	_centenas+1
   729  00DC                     l100:
   730  00DC  0008               	return
   731  00DD                     __end_of_reset:
   732                           
   733                           	psect	text2
   734  00DD                     __ptext2:	
   735 ;; *************** function _contador *****************
   736 ;; Defined at:
   737 ;;		line 120 in file "lab7.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       1       0       0       0
   754 ;;      Totals:         0       1       0       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _contador
   767  00DD                     _contador:
   768  00DD                     l992:	
   769                           ;incstack = 0
   770                           ; Regs used in _contador: [wreg+status,2+status,0]
   771                           
   772                           
   773                           ;lab7.c: 122:      if (PORTBbits.RB0 == 0){
   774  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   775  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   776  00DF  1806               	btfsc	6,0	;volatile
   777  00E0  28E2               	goto	u331
   778  00E1  28E3               	goto	u330
   779  00E2                     u331:
   780  00E2  28E7               	goto	l996
   781  00E3                     u330:
   782  00E3                     l994:
   783                           
   784                           ;lab7.c: 123:          estado1 = 1;
   785  00E3  3001               	movlw	1
   786  00E4  00AE               	movwf	_estado1
   787  00E5  3000               	movlw	0
   788  00E6  00AF               	movwf	_estado1+1
   789  00E7                     l996:
   790                           
   791                           ;lab7.c: 125:      if (PORTBbits.RB0 == 1 && estado1 == 1){
   792  00E7  1C06               	btfss	6,0	;volatile
   793  00E8  28EA               	goto	u341
   794  00E9  28EB               	goto	u340
   795  00EA                     u341:
   796  00EA  28FD               	goto	l1006
   797  00EB                     u340:
   798  00EB                     l998:
   799  00EB  032E               	decf	_estado1,w
   800  00EC  042F               	iorwf	_estado1+1,w
   801  00ED  1D03               	btfss	3,2
   802  00EE  28F0               	goto	u351
   803  00EF  28F1               	goto	u350
   804  00F0                     u351:
   805  00F0  28FD               	goto	l1006
   806  00F1                     u350:
   807  00F1                     l1000:
   808                           
   809                           ;lab7.c: 126:          PORTA++;
   810  00F1  3001               	movlw	1
   811  00F2  00B0               	movwf	??_contador
   812  00F3  0830               	movf	??_contador,w
   813  00F4  0785               	addwf	5,f	;volatile
   814  00F5                     l1002:
   815                           
   816                           ;lab7.c: 127:          unidades++;
   817  00F5  3001               	movlw	1
   818  00F6  07F4               	addwf	_unidades,f
   819  00F7  1803               	skipnc
   820  00F8  0AF5               	incf	_unidades+1,f
   821  00F9  3000               	movlw	0
   822  00FA  07F5               	addwf	_unidades+1,f
   823  00FB                     l1004:
   824                           
   825                           ;lab7.c: 128:          estado1 = 0;
   826  00FB  01AE               	clrf	_estado1
   827  00FC  01AF               	clrf	_estado1+1
   828  00FD                     l1006:
   829                           
   830                           ;lab7.c: 130:      if (PORTBbits.RB1 == 0){
   831  00FD  1886               	btfsc	6,1	;volatile
   832  00FE  2900               	goto	u361
   833  00FF  2901               	goto	u360
   834  0100                     u361:
   835  0100  2905               	goto	l1010
   836  0101                     u360:
   837  0101                     l1008:
   838                           
   839                           ;lab7.c: 131:          estado2 = 1;
   840  0101  3001               	movlw	1
   841  0102  00AC               	movwf	_estado2
   842  0103  3000               	movlw	0
   843  0104  00AD               	movwf	_estado2+1
   844  0105                     l1010:
   845                           
   846                           ;lab7.c: 133:      if (PORTBbits.RB1 == 1 && estado2 == 1){
   847  0105  1C86               	btfss	6,1	;volatile
   848  0106  2908               	goto	u371
   849  0107  2909               	goto	u370
   850  0108                     u371:
   851  0108  2919               	goto	l92
   852  0109                     u370:
   853  0109                     l1012:
   854  0109  032C               	decf	_estado2,w
   855  010A  042D               	iorwf	_estado2+1,w
   856  010B  1D03               	btfss	3,2
   857  010C  290E               	goto	u381
   858  010D  290F               	goto	u380
   859  010E                     u381:
   860  010E  2919               	goto	l92
   861  010F                     u380:
   862  010F                     l1014:
   863                           
   864                           ;lab7.c: 134:          PORTA--;
   865  010F  3001               	movlw	1
   866  0110  0285               	subwf	5,f	;volatile
   867  0111                     l1016:
   868                           
   869                           ;lab7.c: 135:          unidades--;
   870  0111  30FF               	movlw	255
   871  0112  07F4               	addwf	_unidades,f
   872  0113  1803               	skipnc
   873  0114  0AF5               	incf	_unidades+1,f
   874  0115  30FF               	movlw	255
   875  0116  07F5               	addwf	_unidades+1,f
   876  0117                     l1018:
   877                           
   878                           ;lab7.c: 136:          estado2 = 0;
   879  0117  01AC               	clrf	_estado2
   880  0118  01AD               	clrf	_estado2+1
   881  0119                     l92:
   882  0119  0008               	return
   883  011A                     __end_of_contador:
   884                           
   885                           	psect	text3
   886  0156                     __ptext3:	
   887 ;; *************** function _config *****************
   888 ;; Defined at:
   889 ;;		line 85 in file "lab7.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    2
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _config
   919  0156                     _config:
   920  0156                     l944:	
   921                           ;incstack = 0
   922                           ; Regs used in _config: [wreg+status,2]
   923                           
   924                           
   925                           ;lab7.c: 87:      ANSELH = 0b0000000;
   926  0156  1683               	bsf	3,5	;RP0=1, select bank3
   927  0157  1703               	bsf	3,6	;RP1=1, select bank3
   928  0158  0189               	clrf	9	;volatile
   929                           
   930                           ;lab7.c: 88:      ANSEL = 0b0000000;
   931  0159  0188               	clrf	8	;volatile
   932                           
   933                           ;lab7.c: 90:      TRISA = 0b00000000;
   934  015A  1683               	bsf	3,5	;RP0=1, select bank1
   935  015B  1303               	bcf	3,6	;RP1=0, select bank1
   936  015C  0185               	clrf	5	;volatile
   937  015D                     l946:
   938                           
   939                           ;lab7.c: 91:      TRISB = 0b00000011;
   940  015D  3003               	movlw	3
   941  015E  0086               	movwf	6	;volatile
   942  015F                     l948:
   943                           
   944                           ;lab7.c: 92:      TRISD = 0b00000000;
   945  015F  0188               	clrf	8	;volatile
   946  0160                     l950:
   947                           
   948                           ;lab7.c: 93:      TRISC = 0b00000000;
   949  0160  0187               	clrf	7	;volatile
   950  0161                     l952:
   951                           
   952                           ;lab7.c: 94:      TRISE = 0B000;
   953  0161  0189               	clrf	9	;volatile
   954  0162                     l954:
   955                           
   956                           ;lab7.c: 96:      PORTB = 0b00000000;
   957  0162  1283               	bcf	3,5	;RP0=0, select bank0
   958  0163  1303               	bcf	3,6	;RP1=0, select bank0
   959  0164  0186               	clrf	6	;volatile
   960  0165                     l956:
   961                           
   962                           ;lab7.c: 97:      PORTA = 0b00000000;
   963  0165  0185               	clrf	5	;volatile
   964  0166                     l958:
   965                           
   966                           ;lab7.c: 98:      PORTD = 0b00000000;
   967  0166  0188               	clrf	8	;volatile
   968  0167                     l960:
   969                           
   970                           ;lab7.c: 99:      PORTC = 0b00000000;
   971  0167  0187               	clrf	7	;volatile
   972  0168                     l962:
   973                           
   974                           ;lab7.c: 100:      PORTE = 0b000;
   975  0168  0189               	clrf	9	;volatile
   976  0169                     l964:
   977                           
   978                           ;lab7.c: 102:      OSCCONbits.IRCF2 = 0;
   979  0169  1683               	bsf	3,5	;RP0=1, select bank1
   980  016A  1303               	bcf	3,6	;RP1=0, select bank1
   981  016B  130F               	bcf	15,6	;volatile
   982  016C                     l966:
   983                           
   984                           ;lab7.c: 103:      OSCCONbits.IRCF1 = 1;
   985  016C  168F               	bsf	15,5	;volatile
   986  016D                     l968:
   987                           
   988                           ;lab7.c: 104:      OSCCONbits.IRCF0 = 0;
   989  016D  120F               	bcf	15,4	;volatile
   990  016E                     l970:
   991                           
   992                           ;lab7.c: 105:      OSCCONbits.SCS = 1;
   993  016E  140F               	bsf	15,0	;volatile
   994  016F                     l972:
   995                           
   996                           ;lab7.c: 107:      OPTION_REGbits.T0CS = 0;
   997  016F  1281               	bcf	1,5	;volatile
   998  0170                     l974:
   999                           
  1000                           ;lab7.c: 108:      OPTION_REGbits.PSA = 0;
  1001  0170  1181               	bcf	1,3	;volatile
  1002  0171                     l976:
  1003                           
  1004                           ;lab7.c: 109:      OPTION_REGbits.PS2 = 1;
  1005  0171  1501               	bsf	1,2	;volatile
  1006  0172                     l978:
  1007                           
  1008                           ;lab7.c: 110:      OPTION_REGbits.PS1 = 1;
  1009  0172  1481               	bsf	1,1	;volatile
  1010  0173                     l980:
  1011                           
  1012                           ;lab7.c: 111:      OPTION_REGbits.PS0 = 0;
  1013  0173  1001               	bcf	1,0	;volatile
  1014  0174                     l982:
  1015                           
  1016                           ;lab7.c: 112:      TMR0 = 250;
  1017  0174  30FA               	movlw	250
  1018  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0177  0081               	movwf	1	;volatile
  1021  0178                     l984:
  1022                           
  1023                           ;lab7.c: 114:      INTCONbits.T0IF = 0;
  1024  0178  110B               	bcf	11,2	;volatile
  1025  0179                     l986:
  1026                           
  1027                           ;lab7.c: 115:      INTCONbits.T0IE = 1;
  1028  0179  168B               	bsf	11,5	;volatile
  1029  017A                     l988:
  1030                           
  1031                           ;lab7.c: 116:      INTCONbits.GIE = 1;
  1032  017A  178B               	bsf	11,7	;volatile
  1033  017B                     l85:
  1034  017B  0008               	return
  1035  017C                     __end_of_config:
  1036                           
  1037                           	psect	text4
  1038  017C                     __ptext4:	
  1039 ;; *************** function _ISR *****************
  1040 ;; Defined at:
  1041 ;;		line 39 in file "lab7.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          4       0       0       0       0
  1058 ;;      Totals:         4       0       0       0       0
  1059 ;;Total ram usage:        4 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		_multiplex
  1064 ;; This function is called by:
  1065 ;;		Interrupt level 1
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _ISR
  1071  017C                     _ISR:
  1072  017C                     i1l900:
  1073                           
  1074                           ;lab7.c: 41:     if (INTCONbits.T0IF){
  1075  017C  1D0B               	btfss	11,2	;volatile
  1076  017D  297F               	goto	u26_21
  1077  017E  2980               	goto	u26_20
  1078  017F                     u26_21:
  1079  017F  2990               	goto	i1l68
  1080  0180                     u26_20:
  1081  0180                     i1l902:
  1082                           
  1083                           ;lab7.c: 43:         PORTD++;
  1084  0180  3001               	movlw	1
  1085  0181  00F8               	movwf	??_ISR
  1086  0182  0878               	movf	??_ISR,w
  1087  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0185  0788               	addwf	8,f	;volatile
  1090  0186                     i1l904:
  1091                           
  1092                           ;lab7.c: 44:         multiplex();
  1093  0186  120A  118A  211A  120A  118A  	fcall	_multiplex
  1094  018B                     i1l906:
  1095                           
  1096                           ;lab7.c: 45:         T0IF = 0;
  1097  018B  110B               	bcf	11,2	;volatile
  1098  018C                     i1l908:
  1099                           
  1100                           ;lab7.c: 46:         TMR0 = 250;
  1101  018C  30FA               	movlw	250
  1102  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1103  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1104  018F  0081               	movwf	1	;volatile
  1105  0190                     i1l68:
  1106  0190  087B               	movf	??_ISR+3,w
  1107  0191  008A               	movwf	10
  1108  0192  087A               	movf	??_ISR+2,w
  1109  0193  0084               	movwf	4
  1110  0194  0E79               	swapf	??_ISR+1,w
  1111  0195  0083               	movwf	3
  1112  0196  0EFE               	swapf	btemp,f
  1113  0197  0E7E               	swapf	btemp,w
  1114  0198  0009               	retfie
  1115  0199                     __end_of_ISR:
  1116                           
  1117                           	psect	intentry
  1118  0004                     __pintentry:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1121                           
  1122  0004                     interrupt_function:
  1123  007E                     saved_w	set	btemp
  1124  0004  00FE               	movwf	btemp
  1125  0005  0E03               	swapf	3,w
  1126  0006  00F9               	movwf	??_ISR+1
  1127  0007  0804               	movf	4,w
  1128  0008  00FA               	movwf	??_ISR+2
  1129  0009  080A               	movf	10,w
  1130  000A  00FB               	movwf	??_ISR+3
  1131  000B  120A  118A  297C   	ljmp	_ISR
  1132                           
  1133                           	psect	text5
  1134  011A                     __ptext5:	
  1135 ;; *************** function _multiplex *****************
  1136 ;; Defined at:
  1137 ;;		line 141 in file "lab7.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0
  1153 ;;      Temps:          2       0       0       0       0
  1154 ;;      Totals:         2       0       0       0       0
  1155 ;;Total ram usage:        2 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_ISR
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _multiplex
  1166  011A                     _multiplex:
  1167  011A                     i1l850:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _multiplex: [wreg-fsr0h+status,2+status,0]
  1170                           
  1171                           
  1172                           ;lab7.c: 142:         PORTC = Display[ unidades] ;
  1173  011A  0874               	movf	_unidades,w
  1174  011B  3E20               	addlw	(low (_Display| 0))& (0+255)
  1175  011C  0084               	movwf	4
  1176  011D  1383               	bcf	3,7	;select IRP bank0
  1177  011E  0800               	movf	0,w
  1178  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0121  0087               	movwf	7	;volatile
  1181  0122                     i1l852:
  1182                           
  1183                           ;lab7.c: 143:         PORTEbits.RE2 =1 ;
  1184  0122  1509               	bsf	9,2	;volatile
  1185  0123                     i1l854:
  1186                           
  1187                           ;lab7.c: 144:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1188  0123  3003               	movlw	3
  1189  0124  00F7               	movwf	??_multiplex+1
  1190  0125  3097               	movlw	151
  1191  0126  00F6               	movwf	??_multiplex
  1192  0127                     u51_27:
  1193  0127  0BF6               	decfsz	??_multiplex,f
  1194  0128  2927               	goto	u51_27
  1195  0129  0BF7               	decfsz	??_multiplex+1,f
  1196  012A  2927               	goto	u51_27
  1197  012B  292C               	nop2
  1198  012C                     i1l856:
  1199                           
  1200                           ;lab7.c: 145:         PORTEbits.RE2 =0 ;
  1201  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1202  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1203  012E  1109               	bcf	9,2	;volatile
  1204  012F                     i1l858:
  1205                           
  1206                           ;lab7.c: 146:         PORTC = Display[ decenas ] ;
  1207  012F  0872               	movf	_decenas,w
  1208  0130  3E20               	addlw	(low (_Display| 0))& (0+255)
  1209  0131  0084               	movwf	4
  1210  0132  1383               	bcf	3,7	;select IRP bank0
  1211  0133  0800               	movf	0,w
  1212  0134  0087               	movwf	7	;volatile
  1213  0135                     i1l860:
  1214                           
  1215                           ;lab7.c: 147:         PORTEbits.RE1 =1 ;
  1216  0135  1489               	bsf	9,1	;volatile
  1217                           
  1218                           ;lab7.c: 148:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1219  0136  3003               	movlw	3
  1220  0137  00F7               	movwf	??_multiplex+1
  1221  0138  3097               	movlw	151
  1222  0139  00F6               	movwf	??_multiplex
  1223  013A                     u52_27:
  1224  013A  0BF6               	decfsz	??_multiplex,f
  1225  013B  293A               	goto	u52_27
  1226  013C  0BF7               	decfsz	??_multiplex+1,f
  1227  013D  293A               	goto	u52_27
  1228  013E  293F               	nop2
  1229  013F                     i1l862:
  1230                           
  1231                           ;lab7.c: 149:         PORTEbits.RE1 =0 ;
  1232  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0141  1089               	bcf	9,1	;volatile
  1235  0142                     i1l864:
  1236                           
  1237                           ;lab7.c: 150:         PORTC = Display[ centenas ] ;
  1238  0142  0870               	movf	_centenas,w
  1239  0143  3E20               	addlw	(low (_Display| 0))& (0+255)
  1240  0144  0084               	movwf	4
  1241  0145  1383               	bcf	3,7	;select IRP bank0
  1242  0146  0800               	movf	0,w
  1243  0147  0087               	movwf	7	;volatile
  1244  0148                     i1l866:
  1245                           
  1246                           ;lab7.c: 151:         PORTEbits.RE0 =1 ;
  1247  0148  1409               	bsf	9,0	;volatile
  1248  0149                     i1l868:
  1249                           
  1250                           ;lab7.c: 152:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1251  0149  3003               	movlw	3
  1252  014A  00F7               	movwf	??_multiplex+1
  1253  014B  3097               	movlw	151
  1254  014C  00F6               	movwf	??_multiplex
  1255  014D                     u53_27:
  1256  014D  0BF6               	decfsz	??_multiplex,f
  1257  014E  294D               	goto	u53_27
  1258  014F  0BF7               	decfsz	??_multiplex+1,f
  1259  0150  294D               	goto	u53_27
  1260  0151  2952               	nop2
  1261  0152                     i1l870:
  1262                           
  1263                           ;lab7.c: 153:         PORTEbits.RE0 =0 ;
  1264  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0154  1009               	bcf	9,0	;volatile
  1267  0155                     i1l95:
  1268  0155  0008               	return
  1269  0156                     __end_of_multiplex:
  1270  007E                     btemp	set	126	;btemp
  1271  007E                     wtemp0	set	126
  1272                           
  1273                           	psect	config
  1274                           
  1275                           ;Config register CONFIG1 @ 0x2007
  1276                           ;	Oscillator Selection bits
  1277                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1278                           ;	Watchdog Timer Enable bit
  1279                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1280                           ;	Power-up Timer Enable bit
  1281                           ;	PWRTE = OFF, PWRT disabled
  1282                           ;	RE3/MCLR pin function select bit
  1283                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1284                           ;	Code Protection bit
  1285                           ;	CP = OFF, Program memory code protection is disabled
  1286                           ;	Data Code Protection bit
  1287                           ;	CPD = OFF, Data memory code protection is disabled
  1288                           ;	Brown Out Reset Selection bits
  1289                           ;	BOREN = OFF, BOR disabled
  1290                           ;	Internal External Switchover bit
  1291                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1292                           ;	Fail-Safe Clock Monitor Enabled bit
  1293                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1294                           ;	Low Voltage Programming Enable bit
  1295                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1296                           ;	In-Circuit Debugger Mode bit
  1297                           ;	DEBUG = 0x1, unprogrammed default
  1298  2007                     	org	8199
  1299  2007  20D4               	dw	8404
  1300                           
  1301                           ;Config register CONFIG2 @ 0x2008
  1302                           ;	Brown-out Reset Selection bit
  1303                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1304                           ;	Flash Program Memory Self Write Enable bits
  1305                           ;	WRT = OFF, Write protection off
  1306  2008                     	org	8200
  1307  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      1      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_multiplex

Critical Paths under _main in BANK0

    _main->_contador

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _config
                           _contador
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _contador                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                          _multiplex
 ---------------------------------------------------------------------------------
 (3) _multiplex                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _contador
   _reset

 _ISR (ROOT)
   _multiplex

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 14 18:10:53 2021

                      _x 002A                        pc 0002                       l92 0119  
                     l85 017B                       fsr 0004                      l100 00DC  
                    l950 0160                      l960 0167                      l952 0161  
                    l944 0156                      l970 016E                      l962 0168  
                    l954 0162                      l946 015D                      l980 0173  
                    l972 016F                      l964 0169                      l956 0165  
                    l948 015F                      l982 0174                      l974 0170  
                    l966 016C                      l958 0166                      l984 0178  
                    l976 0171                      l968 016D                      l992 00DD  
                    l986 0179                      l978 0172                      l994 00E3  
                    l988 017A                      l996 00E7                      l998 00EB  
                    u400 00B3                      u401 00B2                      u330 00E3  
                    u410 00BA                      u331 00E2                      u411 00B9  
                    u340 00EB                      u420 00C4                      u500 008D  
                    u341 00EA                      u421 00C3                      u501 008C  
                    u350 00F1                      u430 00CA                      u351 00F0  
                    u431 00C9                      u360 0101                      u440 00D0  
                    u361 0100                      u441 00CF                      u370 0109  
                    u450 0041                      u371 0108                      u451 0040  
                    u380 010F                      u460 004D                      _ISR 017C  
                    u381 010E                      u461 004C                      u390 00AC  
                    u470 0064                      u391 00AB                      u471 0063  
                    u455 003D                      u480 0070                      u481 006F  
                    u490 0087                      u395 00A8                      u491 0086  
                    u475 0060                      u495 0083                      fsr0 0004  
                    indf 0000                     ?_ISR 0076                     l1000 00F1  
                   l1010 0105                     l1002 00F5                     l1012 0109  
                   l1004 00FB                     l1020 009F                     l1014 010F  
                   l1006 00FD                     l1030 00C4                     l1022 00AC  
                   l1016 0111                     l1008 0101                     l1032 00CA  
                   l1024 00B3                     l1040 0041                     l1018 0117  
                   l1034 00D0                     l1026 00BA                     l1050 0064  
                   l1042 0043                     l1028 00C0                     l1060 0087  
                   l1052 0066                     l1044 0049                     l1036 002F  
                   l1062 0089                     l1054 006C                     l1046 004D  
                   l1038 0034                     l1064 008D                     l1056 0070  
                   l1048 0057                     l1066 0091                     l1058 007A  
                   l1068 0096                     _T0IF 005A                     i1l68 0190  
                   i1l95 0155                     _TMR0 0001                     _main 002F  
                   btemp 007E                     start 000E                    ??_ISR 0078  
                  ?_main 0076                    _ANSEL 0188                    i1l900 017C  
                  i1l902 0180                    i1l904 0186                    i1l850 011A  
                  i1l906 018B                    i1l860 0135                    i1l852 0122  
                  i1l908 018C                    i1l870 0152                    i1l862 013F  
                  i1l854 0123                    i1l864 0142                    i1l856 012C  
                  i1l866 0148                    i1l858 012F                    i1l868 0149  
                  u26_20 0180                    u26_21 017F                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u51_27 0127                    u52_27 013A  
                  u53_27 014D                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _reset 009F                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 009F  
                 ??_main 0031                   ?_reset 0076                   _ANSELH 0189  
       __end_of_contador 011A                   _config 0156                   saved_w 007E  
__end_of__initialization 002B           __pcstackCOMMON 0076             __pidataBANK0 01AC  
          __end_of_reset 00DD           _OPTION_REGbits 0081                  ??_reset 0030  
             __pbssBANK0 002A               __pmaintext 002F               __pintentry 0004  
                ?_config 0076       __size_of_multiplex 003C                ?_contador 0076  
                _Display 0020          __size_of_config 0026                  _decenas 0072  
                __ptext1 009F                  __ptext2 00DD                  __ptext3 0156  
                __ptext4 017C                  __ptext5 011A             __size_of_ISR 001D  
                _estado1 002E                  _estado2 002C     end_of_initialization 002B  
             ??_contador 0030        __end_of_multiplex 0156                _PORTBbits 0006  
              _PORTEbits 0009           __end_of_config 017C      start_initialization 0011  
            __end_of_ISR 0199               init_fetch0 0199                 ??_config 0030  
            __pdataBANK0 0020              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0030        __size_of_contador 003D           __size_of_reset 003E  
      interrupt_function 0004                _multiplex 011A               ?_multiplex 0076  
               _centenas 0070                 _contador 00DD            __size_of_main 0070  
               _unidades 0074               _INTCONbits 000B                 init_ram0 019D  
               intlevel1 0000               _OSCCONbits 008F              ??_multiplex 0076  
