

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 00:47:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	nvCOMMON
   212  0078                     __pnvCOMMON:
   213  0078                     _uart_data:
   214  0078                     	ds	1
   215  0007                     _PORTC	set	7
   216  001A                     _RCREG	set	26
   217  0019                     _TXREG	set	25
   218  000C                     _PIR1bits	set	12
   219  000B                     _INTCONbits	set	11
   220  0018                     _RCSTAbits	set	24
   221  0087                     _TRISC	set	135
   222  008C                     _PIE1bits	set	140
   223  0098                     _TXSTAbits	set	152
   224  0099                     _SPBRG	set	153
   225  009A                     _SPBRGH	set	154
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	strings
   230  008F                     __pstrings:
   231  008F                     stringtab:
   232  008F                     __stringtab:
   233  008F                     stringcode:	
   234                           ;	String table - string pointers are 1 byte each
   235                           
   236  008F                     stringdir:
   237  008F  3000               	movlw	high stringdir
   238  0090  008A               	movwf	10
   239  0091  0804               	movf	4,w
   240  0092  0A84               	incf	4,f
   241  0093  0782               	addwf	2,f
   242  0094                     __stringbase:
   243  0094  3400               	retlw	0
   244  0095                     __end_of__stringtab:
   245  0095                     STR_2:
   246  0095  3461               	retlw	97	;'a'
   247  0096  3464               	retlw	100	;'d'
   248  0097  3469               	retlw	105	;'i'
   249  0098  346F               	retlw	111	;'o'
   250  0099  3473               	retlw	115	;'s'
   251  009A  3400               	retlw	0
   252  009B                     STR_1:
   253  009B  3468               	retlw	104	;'h'
   254  009C  346F               	retlw	111	;'o'
   255  009D  346C               	retlw	108	;'l'
   256  009E  3461               	retlw	97	;'a'
   257  009F  3400               	retlw	0
   258                           
   259                           	psect	cinit
   260  0015                     start_initialization:	
   261                           ; #config settings
   262                           
   263  0015                     __initialization:
   264                           
   265                           ; Clear objects allocated to COMMON
   266  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   267  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   268  0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   269  0018                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  0018                     __end_of__initialization:
   273  0018  0183               	clrf	3
   274  0019  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMMON
   277  0075                     __pbssCOMMON:
   278  0075                     _str_pos:
   279  0075                     	ds	1
   280  0076                     _uart_cont:
   281  0076                     	ds	1
   282  0077                     _eusart_flag:
   283  0077                     	ds	1
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_setup:
   288  0070                     ?_eusart_init_tx:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_eusart_enable_tx_isr:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_eusart_init_rx:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_eusart_enable_rx_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_isr:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ??_isr:	
   307                           ; 1 bytes @ 0x0
   308                           
   309                           
   310                           ; 1 bytes @ 0x0
   311  0070                     	ds	5
   312  0075                     ??_setup:
   313  0075                     ??_eusart_init_tx:	
   314                           ; 1 bytes @ 0x5
   315                           
   316  0075                     ??_eusart_enable_tx_isr:	
   317                           ; 1 bytes @ 0x5
   318                           
   319  0075                     ??_eusart_init_rx:	
   320                           ; 1 bytes @ 0x5
   321                           
   322  0075                     ??_eusart_enable_rx_isr:	
   323                           ; 1 bytes @ 0x5
   324                           
   325  0075                     ??_main:	
   326                           ; 1 bytes @ 0x5
   327                           
   328                           
   329                           	psect	maintext
   330  00C0                     __pmaintext:	
   331                           ; 1 bytes @ 0x5
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 51 in file "master.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels required when called:    4
   357 ;; This function calls:
   358 ;;		_setup
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _main
   366  00C0                     _main:
   367  00C0                     l725:	
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   370                           
   371                           
   372                           ;master.c: 53:     setup();
   373  00C0  120A  118A  2069  120A  118A  	fcall	_setup
   374  00C5                     l727:
   375                           
   376                           ;master.c: 55:     {;master.c: 57:         uart_data = 0;
   377  00C5  01F8               	clrf	_uart_data
   378  00C6  28C5               	goto	l727
   379  00C7  120A  118A  2812   	ljmp	start
   380  00CA                     __end_of_main:
   381                           
   382                           	psect	text1
   383  0069                     __ptext1:	
   384 ;; *************** function _setup *****************
   385 ;; Defined at:
   386 ;;		line 90 in file "master.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0
   403 ;;      Totals:         0       0       0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    3
   407 ;; This function calls:
   408 ;;		_eusart_enable_rx_isr
   409 ;;		_eusart_enable_tx_isr
   410 ;;		_eusart_init_rx
   411 ;;		_eusart_init_tx
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _setup
   419  0069                     _setup:
   420  0069                     l699:	
   421                           ;incstack = 0
   422                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;master.c: 92:     ANSEL = 0x03;
   426  0069  3003               	movlw	3
   427  006A  1683               	bsf	3,5	;RP0=1, select bank3
   428  006B  1703               	bsf	3,6	;RP1=1, select bank3
   429  006C  0088               	movwf	8	;volatile
   430  006D                     l701:
   431                           
   432                           ;master.c: 93:     ANSELH = 0x00;
   433  006D  0189               	clrf	9	;volatile
   434  006E                     l703:
   435                           
   436                           ;master.c: 94:     TRISC = 0x80;
   437  006E  3080               	movlw	128
   438  006F  1683               	bsf	3,5	;RP0=1, select bank1
   439  0070  1303               	bcf	3,6	;RP1=0, select bank1
   440  0071  0087               	movwf	7	;volatile
   441                           
   442                           ;master.c: 95:     PORTC = 0;
   443  0072  1283               	bcf	3,5	;RP0=0, select bank0
   444  0073  1303               	bcf	3,6	;RP1=0, select bank0
   445  0074  0187               	clrf	7	;volatile
   446  0075                     l705:
   447                           
   448                           ;master.c: 97:     eusart_init_tx();
   449  0075  120A  118A  20B1  120A  118A  	fcall	_eusart_init_tx
   450  007A                     l707:
   451                           
   452                           ;master.c: 98:     eusart_enable_tx_isr();
   453  007A  120A  118A  20CA  120A  118A  	fcall	_eusart_enable_tx_isr
   454  007F                     l709:
   455                           
   456                           ;master.c: 100:     eusart_init_rx();
   457  007F  120A  118A  20A0  120A  118A  	fcall	_eusart_init_rx
   458  0084                     l711:
   459                           
   460                           ;master.c: 101:     eusart_enable_rx_isr();
   461  0084  120A  118A  20D0  120A  118A  	fcall	_eusart_enable_rx_isr
   462  0089                     l713:
   463                           
   464                           ;master.c: 104:     INTCONbits.GIE = 1;
   465  0089  178B               	bsf	11,7	;volatile
   466  008A                     l715:
   467                           
   468                           ;master.c: 105:     PIE1bits.ADIE = 0;
   469  008A  1683               	bsf	3,5	;RP0=1, select bank1
   470  008B  1303               	bcf	3,6	;RP1=0, select bank1
   471  008C  130C               	bcf	12,6	;volatile
   472  008D                     l717:
   473                           
   474                           ;master.c: 106:     PIE1bits.ADIE = 1;
   475  008D  170C               	bsf	12,6	;volatile
   476  008E                     l75:
   477  008E  0008               	return
   478  008F                     __end_of_setup:
   479                           
   480                           	psect	text2
   481  00B1                     __ptext2:	
   482 ;; *************** function _eusart_init_tx *****************
   483 ;; Defined at:
   484 ;;		line 14 in file "./USART.h"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    2
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_setup
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _eusart_init_tx
   514  00B1                     _eusart_init_tx:
   515  00B1                     l667:	
   516                           ;incstack = 0
   517                           ; Regs used in _eusart_init_tx: [wreg+status,2]
   518                           
   519                           
   520                           ;./USART.h: 17:     SPBRGH = 0;
   521  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   522  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   523  00B3  019A               	clrf	26	;volatile
   524  00B4                     l669:
   525                           
   526                           ;./USART.h: 18:     SPBRG = 25;
   527  00B4  3019               	movlw	25
   528  00B5  0099               	movwf	25	;volatile
   529  00B6                     l671:
   530                           
   531                           ;./USART.h: 19:     TXSTAbits.BRGH = 1;
   532  00B6  1518               	bsf	24,2	;volatile
   533  00B7                     l673:
   534                           
   535                           ;./USART.h: 21:     TXSTAbits.SYNC = 0;
   536  00B7  1218               	bcf	24,4	;volatile
   537  00B8                     l675:
   538                           
   539                           ;./USART.h: 22:     RCSTAbits.SPEN = 1;
   540  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   541  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   542  00BA  1798               	bsf	24,7	;volatile
   543  00BB                     l677:
   544                           
   545                           ;./USART.h: 24:     TXSTAbits.TX9 = 0;
   546  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   547  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   548  00BD  1318               	bcf	24,6	;volatile
   549  00BE                     l679:
   550                           
   551                           ;./USART.h: 25:     TXSTAbits.TXEN = 1;
   552  00BE  1698               	bsf	24,5	;volatile
   553  00BF                     l31:
   554  00BF  0008               	return
   555  00C0                     __end_of_eusart_init_tx:
   556                           
   557                           	psect	text3
   558  00A0                     __ptext3:	
   559 ;; *************** function _eusart_init_rx *****************
   560 ;; Defined at:
   561 ;;		line 40 in file "./USART.h"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    2
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_setup
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _eusart_init_rx
   591  00A0                     _eusart_init_rx:
   592  00A0                     l683:	
   593                           ;incstack = 0
   594                           ; Regs used in _eusart_init_rx: [wreg+status,2]
   595                           
   596                           
   597                           ;./USART.h: 42:     SPBRGH = 0;
   598  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   599  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   600  00A2  019A               	clrf	26	;volatile
   601  00A3                     l685:
   602                           
   603                           ;./USART.h: 43:     SPBRG = 25;
   604  00A3  3019               	movlw	25
   605  00A4  0099               	movwf	25	;volatile
   606  00A5                     l687:
   607                           
   608                           ;./USART.h: 44:     TXSTAbits.BRGH = 1;
   609  00A5  1518               	bsf	24,2	;volatile
   610  00A6                     l689:
   611                           
   612                           ;./USART.h: 46:     TXSTAbits.SYNC = 0;
   613  00A6  1218               	bcf	24,4	;volatile
   614  00A7                     l691:
   615                           
   616                           ;./USART.h: 47:     RCSTAbits.SPEN = 1;
   617  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   618  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   619  00A9  1798               	bsf	24,7	;volatile
   620  00AA                     l693:
   621                           
   622                           ;./USART.h: 49:     TXSTAbits.TX9 = 0;
   623  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   624  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   625  00AC  1318               	bcf	24,6	;volatile
   626  00AD                     l695:
   627                           
   628                           ;./USART.h: 50:     RCSTAbits.CREN = 1;
   629  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   630  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   631  00AF  1618               	bsf	24,4	;volatile
   632  00B0                     l40:
   633  00B0  0008               	return
   634  00B1                     __end_of_eusart_init_rx:
   635                           
   636                           	psect	text4
   637  00CA                     __ptext4:	
   638 ;; *************** function _eusart_enable_tx_isr *****************
   639 ;; Defined at:
   640 ;;		line 28 in file "./USART.h"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		None
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_setup
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _eusart_enable_tx_isr
   670  00CA                     _eusart_enable_tx_isr:
   671  00CA                     l681:	
   672                           ;incstack = 0
   673                           ; Regs used in _eusart_enable_tx_isr: []
   674                           
   675                           
   676                           ;./USART.h: 30:     INTCONbits.GIE = 1;
   677  00CA  178B               	bsf	11,7	;volatile
   678                           
   679                           ;./USART.h: 31:     INTCONbits.PEIE = 1;
   680  00CB  170B               	bsf	11,6	;volatile
   681                           
   682                           ;./USART.h: 32:     PIE1bits.TXIE = 1;
   683  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   684  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   685  00CE  160C               	bsf	12,4	;volatile
   686  00CF                     l34:
   687  00CF  0008               	return
   688  00D0                     __end_of_eusart_enable_tx_isr:
   689                           
   690                           	psect	text5
   691  00D0                     __ptext5:	
   692 ;; *************** function _eusart_enable_rx_isr *****************
   693 ;; Defined at:
   694 ;;		line 53 in file "./USART.h"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		None
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_setup
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _eusart_enable_rx_isr
   724  00D0                     _eusart_enable_rx_isr:
   725  00D0                     l697:	
   726                           ;incstack = 0
   727                           ; Regs used in _eusart_enable_rx_isr: []
   728                           
   729                           
   730                           ;./USART.h: 55:     INTCONbits.GIE = 1;
   731  00D0  178B               	bsf	11,7	;volatile
   732                           
   733                           ;./USART.h: 56:     INTCONbits.PEIE = 1;
   734  00D1  170B               	bsf	11,6	;volatile
   735                           
   736                           ;./USART.h: 57:     PIE1bits.RCIE = 1;
   737  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   738  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   739  00D4  168C               	bsf	12,5	;volatile
   740  00D5                     l43:
   741  00D5  0008               	return
   742  00D6                     __end_of_eusart_enable_rx_isr:
   743                           
   744                           	psect	text6
   745  001C                     __ptext6:	
   746 ;; *************** function _isr *****************
   747 ;; Defined at:
   748 ;;		line 62 in file "master.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          5       0       0       0       0
   765 ;;      Totals:         5       0       0       0       0
   766 ;;Total ram usage:        5 bytes
   767 ;; Hardware stack levels used:    2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		Interrupt level 1
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _isr
   777  001C                     _isr:
   778  001C                     i1l751:
   779                           
   780                           ;master.c: 65:     if (PIE1bits.TXIE && PIR1bits.TXIF)
   781  001C  1683               	bsf	3,5	;RP0=1, select bank1
   782  001D  1303               	bcf	3,6	;RP1=0, select bank1
   783  001E  1E0C               	btfss	12,4	;volatile
   784  001F  2821               	goto	u8_21
   785  0020  2822               	goto	u8_20
   786  0021                     u8_21:
   787  0021  2855               	goto	i1l769
   788  0022                     u8_20:
   789  0022                     i1l753:
   790  0022  1283               	bcf	3,5	;RP0=0, select bank0
   791  0023  1303               	bcf	3,6	;RP1=0, select bank0
   792  0024  1E0C               	btfss	12,4	;volatile
   793  0025  2827               	goto	u9_21
   794  0026  2828               	goto	u9_20
   795  0027                     u9_21:
   796  0027  2855               	goto	i1l769
   797  0028                     u9_20:
   798  0028                     i1l755:
   799                           
   800                           ;master.c: 66:     {;master.c: 67:         if (eusart_flag)
   801  0028  0877               	movf	_eusart_flag,w
   802  0029  1903               	btfsc	3,2
   803  002A  282C               	goto	u10_21
   804  002B  282D               	goto	u10_20
   805  002C                     u10_21:
   806  002C  2837               	goto	i1l759
   807  002D                     u10_20:
   808  002D                     i1l757:
   809                           
   810                           ;master.c: 68:         {;master.c: 69:             TXREG = "hola"[str_pos];
   811  002D  0875               	movf	_str_pos,w
   812  002E  3E07               	addlw	low ((STR_1-__stringbase)| (0+32768))
   813  002F  0084               	movwf	4
   814  0030  120A  118A  208F  120A  118A  	fcall	stringdir
   815  0035  0099               	movwf	25	;volatile
   816                           
   817                           ;master.c: 70:         }
   818  0036  2840               	goto	i1l761
   819  0037                     i1l759:
   820                           
   821                           ;master.c: 72:         {;master.c: 73:             TXREG = "adios"[str_pos];
   822  0037  0875               	movf	_str_pos,w
   823  0038  3E01               	addlw	low ((STR_2-__stringbase)| (0+32768))
   824  0039  0084               	movwf	4
   825  003A  120A  118A  208F  120A  118A  	fcall	stringdir
   826  003F  0099               	movwf	25	;volatile
   827  0040                     i1l761:
   828                           
   829                           ;master.c: 75:         str_pos++;
   830  0040  3001               	movlw	1
   831  0041  00F0               	movwf	??_isr
   832  0042  0870               	movf	??_isr,w
   833  0043  07F5               	addwf	_str_pos,f
   834  0044                     i1l763:
   835                           
   836                           ;master.c: 77:         if (str_pos == 5)
   837  0044  3005               	movlw	5
   838  0045  0675               	xorwf	_str_pos,w
   839  0046  1D03               	btfss	3,2
   840  0047  2849               	goto	u11_21
   841  0048  284A               	goto	u11_20
   842  0049                     u11_21:
   843  0049  2855               	goto	i1l769
   844  004A                     u11_20:
   845  004A                     i1l765:
   846                           
   847                           ;master.c: 78:         {;master.c: 79:             eusart_flag = !eusart_flag;
   848  004A  0877               	movf	_eusart_flag,w
   849  004B  1903               	btfsc	3,2
   850  004C  284E               	goto	u12_21
   851  004D  2850               	goto	u12_20
   852  004E                     u12_21:
   853  004E  3001               	movlw	1
   854  004F  2851               	goto	u13_20
   855  0050                     u12_20:
   856  0050  3000               	movlw	0
   857  0051                     u13_20:
   858  0051  00F0               	movwf	??_isr
   859  0052  0870               	movf	??_isr,w
   860  0053  00F7               	movwf	_eusart_flag
   861  0054                     i1l767:
   862                           
   863                           ;master.c: 80:             str_pos = 0;
   864  0054  01F5               	clrf	_str_pos
   865  0055                     i1l769:
   866                           
   867                           ;master.c: 84:     if (PIR1bits.RCIF)
   868  0055  1283               	bcf	3,5	;RP0=0, select bank0
   869  0056  1E8C               	btfss	12,5	;volatile
   870  0057  2859               	goto	u14_21
   871  0058  285A               	goto	u14_20
   872  0059                     u14_21:
   873  0059  285E               	goto	i1l72
   874  005A                     u14_20:
   875  005A                     i1l771:
   876                           
   877                           ;master.c: 85:     {;master.c: 86:         uart_data = RCREG;
   878  005A  081A               	movf	26,w	;volatile
   879  005B  00F0               	movwf	??_isr
   880  005C  0870               	movf	??_isr,w
   881  005D  00F8               	movwf	_uart_data
   882  005E                     i1l72:
   883  005E  0874               	movf	??_isr+4,w
   884  005F  00FF               	movwf	btemp+1
   885  0060  0873               	movf	??_isr+3,w
   886  0061  008A               	movwf	10
   887  0062  0872               	movf	??_isr+2,w
   888  0063  0084               	movwf	4
   889  0064  0E71               	swapf	??_isr+1,w
   890  0065  0083               	movwf	3
   891  0066  0EFE               	swapf	btemp,f
   892  0067  0E7E               	swapf	btemp,w
   893  0068  0009               	retfie
   894  0069                     __end_of_isr:
   895  007E                     btemp	set	126	;btemp
   896  007E                     wtemp0	set	126
   897                           
   898                           	psect	intentry
   899  0004                     __pintentry:	
   900                           ;incstack = 0
   901                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
   902                           
   903  0004                     interrupt_function:
   904  007E                     saved_w	set	btemp
   905  0004  00FE               	movwf	btemp
   906  0005  0E03               	swapf	3,w
   907  0006  00F1               	movwf	??_isr+1
   908  0007  0804               	movf	4,w
   909  0008  00F2               	movwf	??_isr+2
   910  0009  080A               	movf	10,w
   911  000A  00F3               	movwf	??_isr+3
   912  000B  1283               	bcf	3,5	;RP0=0, select bank0
   913  000C  1303               	bcf	3,6	;RP1=0, select bank0
   914  000D  087F               	movf	btemp+1,w
   915  000E  00F4               	movwf	??_isr+4
   916  000F  120A  118A  281C   	ljmp	_isr
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = OFF, BOR disabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  20D4               	dw	8404
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
               _eusart_enable_rx_isr
               _eusart_enable_tx_isr
                     _eusart_init_rx
                     _eusart_init_tx
 ---------------------------------------------------------------------------------
 (2) _eusart_init_tx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init_rx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_tx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_rx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _eusart_enable_rx_isr
     _eusart_enable_tx_isr
     _eusart_init_rx
     _eusart_init_tx

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 00:47:20 2021

                            pc 0002                             l31 00BF                             l40 00B0  
                           l34 00CF                             l43 00D5                             l75 008E  
                           fsr 0004                            l701 006D                            l711 0084  
                          l703 006E                            l713 0089                            l705 0075  
                          l715 008A                            l707 007A                            l717 008D  
                          l709 007F                            l725 00C0                            l671 00B6  
                          l727 00C5                            l681 00CA                            l673 00B7  
                          l691 00A7                            l683 00A0                            l675 00B8  
                          l667 00B1                            l693 00AA                            l685 00A3  
                          l677 00BB                            l669 00B4                            l695 00AD  
                          l687 00A5                            l679 00BE                            l697 00D0  
                          l689 00A6                            l699 0069                            _isr 001C  
                          fsr0 0004                           ?_isr 0070                           STR_1 009B  
                         STR_2 0095                           i1l72 005E                           u8_20 0022  
                         u8_21 0021                           u9_20 0028                           u9_21 0027  
                         _main 00C0                           btemp 007E                           start 0012  
                        ??_isr 0070                          ?_main 0070                          _ANSEL 0188  
                        i1l751 001C                          i1l761 0040                          i1l753 0022  
                        i1l771 005A                          i1l763 0044                          i1l755 0028  
                        i1l765 004A                          i1l757 002D                          i1l767 0054  
                        i1l759 0037                          i1l769 0055                          _RCREG 001A  
                        u10_20 002D                          u10_21 002C                          u11_20 004A  
                        u11_21 0049                          u12_20 0050                          u12_21 004E  
                        u13_20 0051                          u14_20 005A                          u14_21 0059  
                        _SPBRG 0099                          _PORTC 0007                          _TRISC 0087  
                        _TXREG 0019                          _setup 0069                          pclath 000A  
                        status 0003                          wtemp0 007E               ??_eusart_init_rx 0075  
             ??_eusart_init_tx 0075                __initialization 0015   __end_of_eusart_enable_rx_isr 00D6  
 __end_of_eusart_enable_tx_isr 00D0                   __end_of_main 00CA                         ??_main 0075  
                       ?_setup 0070                         _ANSELH 0189                         _SPBRGH 009A  
                       saved_w 007E        __end_of__initialization 0018                 __pcstackCOMMON 0070  
                __end_of_setup 008F           _eusart_enable_rx_isr 00D0           _eusart_enable_tx_isr 00CA  
                      ??_setup 0075                     __pnvCOMMON 0078                     __pmaintext 00C0  
                   __pintentry 0004          ?_eusart_enable_rx_isr 0070          ?_eusart_enable_tx_isr 0070  
                   __stringtab 008F                        __ptext1 0069                        __ptext2 00B1  
                      __ptext3 00A0                        __ptext4 00CA                        __ptext5 00D0  
                      __ptext6 001C                   __size_of_isr 004D                        _str_pos 0075  
         end_of_initialization 0018                      _RCSTAbits 0018         ??_eusart_enable_rx_isr 0075  
       ??_eusart_enable_tx_isr 0075                      _TXSTAbits 0098        __size_of_eusart_init_rx 0011  
      __size_of_eusart_init_tx 000F            start_initialization 0015                    __end_of_isr 0069  
                  __pbssCOMMON 0075                      ___latbits 0002                      __pstrings 008F  
               __size_of_setup 0026              interrupt_function 0004                       _PIE1bits 008C  
                     _PIR1bits 000C                      _uart_data 0078                      _uart_cont 0076  
               _eusart_init_rx 00A0                 _eusart_init_tx 00B1                    __stringbase 0094  
       __end_of_eusart_init_rx 00B1         __end_of_eusart_init_tx 00C0             __end_of__stringtab 0095  
__size_of_eusart_enable_rx_isr 0006  __size_of_eusart_enable_tx_isr 0006                    _eusart_flag 0077  
                __size_of_main 000A                ?_eusart_init_rx 0070                ?_eusart_init_tx 0070  
                   _INTCONbits 000B                       intlevel1 0000                      stringcode 008F  
                     stringdir 008F                       stringtab 008F  
